author,git-repo,name,description,license,type
SciLifeLab,https://github.com/SciLifeLab/Sarek,SciLifeLab/Sarek,Detect germline or somatic variants from normal or tumour/normal whole-genome or targeted sequencing,MIT,NF
nextflow-io,https://github.com/nextflow-io/patterns,nextflow-io/patterns,A curated collections of Nextflow implementation patterns -- http://nextflow-io.github.io/patterns/index.html,MIT,NF
alesssia,https://github.com/alesssia/YAMP,alesssia/YAMP,YAMP: Yet Another Metagenomic Pipeline,GPL-3.0,NF
ewels,https://github.com/ewels/nf-core-rnaseq,ewels/nf-core-rnaseq,See the main fork of this repository here >>> ,MIT,NF
nf-core,https://github.com/nf-core/ampliseq,nf-core/ampliseq,16S rRNA amplicon sequencing analysis workflow using QIIME2,MIT,NF
nextflow-io,https://github.com/nextflow-io/rnatoy,nextflow-io/rnatoy,A proof of concept RNA-Seq pipeline with Nextflow,,NF
CRG-CNAG,https://github.com/CRG-CNAG/CalliNGS-NF,CRG-CNAG/CalliNGS-NF,GATK RNA-Seq Variant Calling in Nextflow,MPL-2.0,NF
cbcrg,https://github.com/cbcrg/kallisto-nf,cbcrg/kallisto-nf,A nextflow implementation of Kallisto & Sleuth RNA-Seq Tools,,NF
nextflow-io,https://github.com/nextflow-io/nf-hack17-tutorial,nextflow-io/nf-hack17-tutorial,Nextflow basic tutorial for newbie users ,,NF
montilab,https://github.com/montilab/pipeliner,montilab/pipeliner,A flexible Nextflow-based framework for the definition of sequencing data processing pipelines,,NF
cbcrg,https://github.com/cbcrg/piper-nf,cbcrg/piper-nf,RNA mapping pipeline,GPL-3.0,NF
stevekm,https://github.com/stevekm/nextflow-demos,stevekm/nextflow-demos,Example Nextflow pipelines and programming techniques,GPL-3.0,NF
lifebit-ai,https://github.com/lifebit-ai/DeepVariant,lifebit-ai/DeepVariant,Deep Variant as a Nextflow pipeline,Apache-2.0,NF
HadrienG,https://github.com/HadrienG/nanoflow,HadrienG/nanoflow,:microscope: De novo assembly of nanopore reads using nextflow,GPL-3.0,NF
nf-core,https://github.com/nf-core/eager,nf-core/eager,A fully reproducible and state of the art ancient DNA analysis pipeline.,MIT,NF
nextflow-io,https://github.com/nextflow-io/nf-hack18,nextflow-io/nf-hack18,Nextflow workshop 2018 -- Training pages -> https://nextflow-io.github.io/nf-hack18/,,NF
CAMI-challenge,https://github.com/CAMI-challenge/CAMITAX,CAMI-challenge/CAMITAX,CAMITAX: Taxon labels for microbial genomes,Apache-2.0,NF
guigolab,https://github.com/guigolab/chip-nf,guigolab/chip-nf,An automated ChIP-seq pipeline using Nextfow,,NF
hmkim,https://github.com/hmkim/workflow,hmkim/workflow,Workflow in bioinformatics,,NF
evanfloden,https://github.com/evanfloden/tuxedo-nf,evanfloden/tuxedo-nf,A Nextflow implementation of the Tuxedo Suite of Tools: HISAT  StringTie & Ballgown,,NF
nf-core,https://github.com/nf-core/mag,nf-core/mag,Assembly and binning of metagenomes,MIT,NF
nextflow-io,https://github.com/nextflow-io/gccbosc18-training,nextflow-io/gccbosc18-training,Documentation for Nextflow training at GCC/BOSC 2018,MIT,NF
h3abionet,https://github.com/h3abionet/chipimputation,h3abionet/chipimputation,Genotype Imputation Pipeline for H3Africa,MIT,NF
chuan-wang,https://github.com/chuan-wang/NGI-ChIPseq,chuan-wang/NGI-ChIPseq,Nextflow ChIP-seq data analysis pipeline  National Genomics Infrastructure  Science for Life Laboratory in Stockholm,MIT,NF
lehtiolab,https://github.com/lehtiolab/galaxy-workflows,lehtiolab/galaxy-workflows,Lehti√∂ lab analysis workflows,MIT,NF
nf-core,https://github.com/nf-core/vipr,nf-core/vipr,Assembly and intrahost / low-frequency variant calling for viral samples,MIT,NF
likelet,https://github.com/likelet/ExomePipe,likelet/ExomePipe,,GPL-3.0,NF
biocorecrg,https://github.com/biocorecrg/goodbioinfo2018,biocorecrg/goodbioinfo2018,Course on good practice in bioinformatics,,NF
SystemsGenetics,https://github.com/SystemsGenetics/GEMmaker,SystemsGenetics/GEMmaker,A workflow for construction of Gene Expression count Matrices (GEMs). Useful for Differential Gene Expression (DGE) analysis and Gene Co-Expression Network (GCN) construction,GPL-2.0,NF
HPCBio,https://github.com/HPCBio/16S-rDNA-dada2-pipeline,HPCBio/16S-rDNA-dada2-pipeline,dada2 Nextflow pipeline,MIT,NF
murphycj,https://github.com/murphycj/manuscripts,murphycj/manuscripts,Code and data for manuscripts.,,NF
lifebit-ai,https://github.com/lifebit-ai/kallisto-sra,lifebit-ai/kallisto-sra,,,NF
shaze,https://github.com/shaze/nextflow-course,shaze/nextflow-course,,LGPL-2.1,NF
kingzhuky,https://github.com/kingzhuky/m6APipe,kingzhuky/m6APipe,,LGPL-3.0,NF
nextflow-io,https://github.com/nextflow-io/rnaseq-nf,nextflow-io/rnaseq-nf,A proof of concept of RNAseq pipeline,MPL-2.0,NF
danforthcenter,https://github.com/danforthcenter/bioinformatics,danforthcenter/bioinformatics,The Donald Danforth Plant Science Center Bioinformatics Core Facility public repository,MIT,NF
evanfloden,https://github.com/evanfloden/nf-module-demo,evanfloden/nf-module-demo,Demo for Nextflow modules and components proposal,GPL-3.0,NF
cbcrg,https://github.com/cbcrg/nf-phdcourse18,cbcrg/nf-phdcourse18,Nextflow training material for Phd course 2018,MIT,NF
guigolab,https://github.com/guigolab/sambamBench-nf,guigolab/sambamBench-nf,A simple Nextflow pipeline for testing the performance of sambamba vs samtools,LGPL-3.0,NF
evanfloden,https://github.com/evanfloden/lncRNA-Annotation-nf,evanfloden/lncRNA-Annotation-nf,A Nextflow lncRNA Annotation Pipeline based on STAR  Cufflinks and FEELnc,,NF
likelet,https://github.com/likelet/multiexseq,likelet/multiexseq,,MIT,NF
thanhleviet,https://github.com/thanhleviet/nf-pipelines,thanhleviet/nf-pipelines,A mix of nextflow scripts mainly used for bacteria. Under developing.,,NF
staphopia,https://github.com/staphopia/staphopia-ap,staphopia/staphopia-ap,,,NF
ZuberLab,https://github.com/ZuberLab/crispr-nf,ZuberLab/crispr-nf,Pre-processing of multiplexed CRISPR / shRNA Screens (deprecated),MIT,NF
KevinMenden,https://github.com/KevinMenden/hybrid-assembly,KevinMenden/hybrid-assembly,Pipeline for hybrid assembly using short and long reads.,MIT,NF
NorwegianVeterinaryInstitute,https://github.com/NorwegianVeterinaryInstitute/Bifrost,NorwegianVeterinaryInstitute/Bifrost,,NOASSERTION,NF
biocorecrg,https://github.com/biocorecrg/C4LWG-2018,biocorecrg/C4LWG-2018,Hands-on tutorial on Nextflow and Containers (Docker and Singularity). Paris 2018.,GPL-3.0,NF
MaxUlysse,https://github.com/MaxUlysse/compile-latex,MaxUlysse/compile-latex,Simple beamer/latex compiler using Nextflow  provided with Docker container,MIT,NF
qbicsoftware,https://github.com/qbicsoftware/hlatyping-workflow,qbicsoftware/hlatyping-workflow,Precision HLA typing from next-generation sequencing data,MIT,NF
mhebrard,https://github.com/mhebrard/TrimFlow,mhebrard/TrimFlow,workflow example managed with Nextflow within Singularity that run Trimgalore on fastq files,MIT,NF
bigbio,https://github.com/bigbio/nf-workflows,bigbio/nf-workflows,Repository of Nextflow+BioContainers workflows,GPL-2.0,NF
KevinMenden,https://github.com/KevinMenden/nf-cageseq,KevinMenden/nf-cageseq,Nextflow CAGE-seq pipeline,MIT,NF
crickbabs,https://github.com/crickbabs/rnaSeq_byBABS,crickbabs/rnaSeq_byBABS,Nextflow RNA-Seq Analysis Pipeline,,NF
heuermh,https://github.com/heuermh/bdg-nextflow,heuermh/bdg-nextflow,Workflows implemented via Nextflow.,Apache-2.0,NF
NYU-Molecular-Pathology,https://github.com/NYU-Molecular-Pathology/NGS580-nf,NYU-Molecular-Pathology/NGS580-nf,Target exome analysis for 580 gene panel,GPL-3.0,NF
aertslab,https://github.com/aertslab/scenic-nf,aertslab/scenic-nf,Test case for a pySCENIC Nextflow pipeline using containers,,NF
nextflow-io,https://github.com/nextflow-io/tests,nextflow-io/tests,Nextflow tests,Apache-2.0,NF
IARCbioinfo,https://github.com/IARCbioinfo/gatk4-HaplotypeCaller-nf,IARCbioinfo/gatk4-HaplotypeCaller-nf,GATK4 HaplotypeCaller step  in gVCF mode  first step for subsequent whole cohort Joint Genotyping.,GPL-3.0,NF
IARCbioinfo,https://github.com/IARCbioinfo/conpair-nf,IARCbioinfo/conpair-nf,Nextflow pipeline for Conpair (concordance and contamination estimator),,NF
biocorecrg,https://github.com/biocorecrg/indrop,biocorecrg/indrop,Single cell transcriptome analysis pipeline based on DropEst ,MPL-2.0,NF
biocorecrg,https://github.com/biocorecrg/indrop,biocorecrg/indrop,Single cell transcriptome analysis pipeline based on DropEst ,MPL-2.0,NF
HadrienG,https://github.com/HadrienG/2018_coral_16S,HadrienG/2018_coral_16S,,,NF
lifebit-ai,https://github.com/lifebit-ai/star-nf,lifebit-ai/star-nf,,,NF
ikmb-denbi,https://github.com/ikmb-denbi/genome-annotation,ikmb-denbi/genome-annotation,,MIT,NF
evanfloden,https://github.com/evanfloden/sra-dump-nf,evanfloden/sra-dump-nf,Some ideas for pulling experiments directly from the SRA with Nextflow,,NF
lifebit-ai,https://github.com/lifebit-ai/roary,lifebit-ai/roary,Pan-genome nextflow pipeline which uses fasta input files for Prokka and Roary before generating visualisations,MIT,NF
IARCbioinfo,https://github.com/IARCbioinfo/gatk4-GenotypeGVCFs-nf,IARCbioinfo/gatk4-GenotypeGVCFs-nf,Joint calling of gVCF  following GATK4 Best Practices,GPL-3.0,NF
InformaticsMatters,https://github.com/InformaticsMatters/docking-validation,InformaticsMatters/docking-validation,Validation studies for docking related studies,,NF
aunderwo,https://github.com/aunderwo/nf-core-bactmap,aunderwo/nf-core-bactmap,A mapping-based pipeline for creating a phylogeny from bacterial whole genome sequences,MIT,NF
NYU-Molecular-Pathology,https://github.com/NYU-Molecular-Pathology/lyz-nf,NYU-Molecular-Pathology/lyz-nf,lab monitoring program,GPL-3.0,NF
nextflow-io,https://github.com/nextflow-io/blast-example,nextflow-io/blast-example,A basic blast pipeline using nextflow,,NF
viktorlj,https://github.com/viktorlj/SarGet,viktorlj/SarGet,Test repository for NextFlow Haloplex analysis pipeline,,NF
bzhanglab,https://github.com/bzhanglab/neoflow,bzhanglab/neoflow,NeoFlow is a standalone tool developed based on Nextflow and Docker and is developed for tumor neoantigens identification using DNA-Seq  RNA-Seq and MS/MS data.,GPL-3.0,NF
JWDebler,https://github.com/JWDebler/nf-genomeCoverage,JWDebler/nf-genomeCoverage,,,NF
coraliegimonnet,https://github.com/coraliegimonnet/BS-Seq_pipeline,coraliegimonnet/BS-Seq_pipeline,,,NF
crickbabs,https://github.com/crickbabs/qualityControl_byBABS,crickbabs/qualityControl_byBABS,Nextflow Quality Control Analysis Pipeline,,NF
ObenaufLab,https://github.com/ObenaufLab/snv-calling-nf,ObenaufLab/snv-calling-nf,Nextflow workflow for SNV calling using GATK4 / MuTect2  CaVEMan / Pindel and Strelka2,MIT,NF
biocorecrg,https://github.com/biocorecrg/vectorQC,biocorecrg/vectorQC,A Nextflow pipeline for assembling vectors and extract annotations,MPL-2.0,NF
stevekm,https://github.com/stevekm/nextflow-pipeline-demo,stevekm/nextflow-pipeline-demo,,GPL-3.0,NF
viktorlj,https://github.com/viktorlj/SarekCLLPostProcess,viktorlj/SarekCLLPostProcess,Process StrelkaBP results from Sarek,,NF
csiro-crop-informatics,https://github.com/csiro-crop-informatics/reproducible_poc,csiro-crop-informatics/reproducible_poc,,,NF
IARCbioinfo,https://github.com/IARCbioinfo/gatk4-DataPreProcessing-nf,IARCbioinfo/gatk4-DataPreProcessing-nf,Nextflow pipeline for pre-process BAM(s) with hg38 and GATK4,GPL-3.0,NF
jianhong,https://github.com/jianhong/MintChIP,jianhong/MintChIP,pipeline for MintChIP,,NF
ewels,https://github.com/ewels/nf-core-cookiecutter,ewels/nf-core-cookiecutter,DEPRECIATED! Please use nf-core/tools instead,MIT,NF
maxemil,https://github.com/maxemil/PhyloMagnet,maxemil/PhyloMagnet,screening metagenomes for arbitrary lineages  using gene-centric assembly methods and phylogenetics,NOASSERTION,NF
pbelmann,https://github.com/pbelmann/sra-download,pbelmann/sra-download,,MIT,NF
evolbioinfo,https://github.com/evolbioinfo/booster-workflows,evolbioinfo/booster-workflows,,,NF
cbcrg,https://github.com/cbcrg/raxml-nf,cbcrg/raxml-nf,RAxML pipeline,,NF
maxibor,https://github.com/maxibor/admapipe,maxibor/admapipe,Ancient Dna Metagenomics Analysis PIPEline,MIT,NF
chdem,https://github.com/chdem/nxf_course,chdem/nxf_course,,,NF
varshini712,https://github.com/varshini712/cnv-nf,varshini712/cnv-nf,,GPL-3.0,NF
zsteve,https://github.com/zsteve/nf-ATAC,zsteve/nf-ATAC, ATAC-seq pipeline written in Nextflow,MIT,NF
ZuberLab,https://github.com/ZuberLab/crispr-mageck-nf,ZuberLab/crispr-mageck-nf,Analyze CRISPR and shRNA functional genetic screening data,MIT,NF
drpatelh,https://github.com/drpatelh/nf-core-mnaseseq,drpatelh/nf-core-mnaseseq,UNDER CONSTRUCTION: MNase-seq analysis pipeline using BWA and DANPOS2.,MIT,NF
BigelowLab,https://github.com/BigelowLab/gorg-classifier,BigelowLab/gorg-classifier,,MIT,NF
oskarvid,https://github.com/oskarvid/nextflow-GermlineVarCall,oskarvid/nextflow-GermlineVarCall,Location for a NextFlow implementation of a GATK best practices pipeline,,NF
Gregor-Mendel-Institute,https://github.com/Gregor-Mendel-Institute/isoseq3,Gregor-Mendel-Institute/isoseq3,,,NF
gencorefacility,https://github.com/gencorefacility/nf-workflows,gencorefacility/nf-workflows,Repository of NextFlow Workflows,,NF
crickbabs,https://github.com/crickbabs/BABS-RNASeq,crickbabs/BABS-RNASeq,RNASeq Best Practice Analysis,MIT,NF
evanfloden,https://github.com/evanfloden/vast-tools-nf,evanfloden/vast-tools-nf,A Nextflow Implementation of VAST-TOOLS for profiling alternative splicing events in RNA-Seq data,,NF
nf-core,https://github.com/nf-core/configs,nf-core/configs,Config files used to define parameters specific to compute environments at different Institutions.,MIT,NF
HadrienG,https://github.com/HadrienG/nextflow_prokka,HadrienG/nextflow_prokka,,GPL-3.0,NF
BioinformaticsLabAtMUN,https://github.com/BioinformaticsLabAtMUN/sRNACharP,BioinformaticsLabAtMUN/sRNACharP,An automated sRNA pipeline using Nextflow ,GPL-3.0,NF
Hammarn,https://github.com/Hammarn/Popolipo,Hammarn/Popolipo,,MIT,NF
Ackia,https://github.com/Ackia/Nextflow_testing,Ackia/Nextflow_testing,,,NF
ganguvamshi,https://github.com/ganguvamshi/nf-fastqdump,ganguvamshi/nf-fastqdump,a nextflow project for converting sra to fastq using fastq-dump,,NF
hivana,https://github.com/hivana/b-method-exercises,hivana/b-method-exercises,:notebook: Notes and exercises from B-Method textbook,MIT,NF
ericaenjoy3,https://github.com/ericaenjoy3/rna_nf,ericaenjoy3/rna_nf,Nextflow RNA-seq Pipeline (FastQC  STAR/Tophat Aligner  Sambamba/Samtools  Picard QC  FeatureCounts and Salmon Quantification),,NF
grbot,https://github.com/grbot/nf-core-example,grbot/nf-core-example,nf-core template test,MIT,NF
lifebit-ai,https://github.com/lifebit-ai/strelka2,lifebit-ai/strelka2,,Apache-2.0,NF
mypandos,https://github.com/mypandos/gwen,mypandos/gwen,Gwen project,MIT,NF
IARCbioinfo,https://github.com/IARCbioinfo/nf_coverage_demo,IARCbioinfo/nf_coverage_demo,Nextflow demo plotting mean coverage over a series of BAM files,GPL-3.0,NF
coughls,https://github.com/coughls/nextflow-example-scripts,coughls/nextflow-example-scripts,Scripts from my talk at nextflow hack 2018: https://github.com/nextflow-io/nf-hack18/blob/master/schedule.md,,NF
xg203,https://github.com/xg203/nextflow,xg203/nextflow,,,NF
digitalproteomes,https://github.com/digitalproteomes/NF-CometTPP,digitalproteomes/NF-CometTPP,,,NF
phelelani,https://github.com/phelelani/nf-rnaSeqCount,phelelani/nf-rnaSeqCount,Assembly and differential expression analysis,,NF
pprieto,https://github.com/pprieto/toy,pprieto/toy,,,NF
YounisLab,https://github.com/YounisLab/rnaseq-pipeline,YounisLab/rnaseq-pipeline,Nextflow pipeline that runs STAR  Cufflinks and splicing-analysis.,,NF
plantinformatics,https://github.com/plantinformatics/pretzel-input-generator,plantinformatics/pretzel-input-generator,,GPL-3.0,NF
mes5k,https://github.com/mes5k/new_school_nf,mes5k/new_school_nf,,,NF
Gregor-Mendel-Institute,https://github.com/Gregor-Mendel-Institute/kWIP-nf,Gregor-Mendel-Institute/kWIP-nf,A nextflow pipeline to estimate sample (dis)similarity using kWIP,MIT,NF
BU-ISCIII,https://github.com/BU-ISCIII/introduction_to_bioinformatics,BU-ISCIII/introduction_to_bioinformatics,In this training course you will find theory and practice material for introducing yourself to the basics of high throughput sequencing data analysis.,GPL-3.0,NF
drpatelh,https://github.com/drpatelh/nf-core-imcyto,drpatelh/nf-core-imcyto,UNDER CONSTRUCTION: Image Mass Cytometry analysis pipeline,MIT,NF
huguesfontenelle,https://github.com/huguesfontenelle/nextflow-bug-config,huguesfontenelle/nextflow-bug-config,,,NF
lakinsm,https://github.com/lakinsm/bear-wgs,lakinsm/bear-wgs,USDA ARS BEARRU Whole Genome Sequencing Workflow,,NF
thanhleviet,https://github.com/thanhleviet/nextflow-vipr3,thanhleviet/nextflow-vipr3,Assembly pipelines for viral NGS data  ported from snakemake version by Anreas Wilm,,NF
Ackia,https://github.com/Ackia/AMB_Baltic-Sediment,Ackia/AMB_Baltic-Sediment,,MIT,NF
lifebit-ai,https://github.com/lifebit-ai/DeepVariantWGS,lifebit-ai/DeepVariantWGS,,Apache-2.0,NF
gaow,https://github.com/gaow/fastqc-nf,gaow/fastqc-nf,A nextflow demo,,NF
HugoMananet,https://github.com/HugoMananet/SegMuVar,HugoMananet/SegMuVar,,,NF
ImaneLboukili,https://github.com/ImaneLboukili/WGS_analysis,ImaneLboukili/WGS_analysis,,,NF
sinonkt,https://github.com/sinonkt/test-nf,sinonkt/test-nf,Workflow  simulate workload  for testing purpose.,,NF
zamanianlab,https://github.com/zamanianlab/BmAe_smRNA-nf,zamanianlab/BmAe_smRNA-nf,,MIT,NF
kviljoen,https://github.com/kviljoen/16S_quick_QC,kviljoen/16S_quick_QC,Just a quick QC test running fastqc and multiqc,,NF
SLUBioinformaticsInfrastructure,https://github.com/SLUBioinformaticsInfrastructure/RNAseq_nf,SLUBioinformaticsInfrastructure/RNAseq_nf,,GPL-3.0,NF
lifebit-ai,https://github.com/lifebit-ai/imputeAncestry,lifebit-ai/imputeAncestry,Imputation pipeline including ancestry module,,NF
OncoImmunity,https://github.com/OncoImmunity/nextflow-bug-pull-submodules,OncoImmunity/nextflow-bug-pull-submodules,,,NF
nf-core,https://github.com/nf-core/nascent,nf-core/nascent,UNDER CONSTRUCTION - Nascent Transcription Processing Pipeline,MIT,NF
c-guzman,https://github.com/c-guzman/chip,c-guzman/chip,ChIP-seq pipeline for Heinz Lab,MIT,NF
lifebit-ai,https://github.com/lifebit-ai/Tardis,lifebit-ai/Tardis,Tool for automated and rapid discovery of structural variants,,NF
digitalproteomes,https://github.com/digitalproteomes/NF-SpectraST,digitalproteomes/NF-SpectraST,,,NF
adamrtalbot,https://github.com/adamrtalbot/yarcc_nextflow_config,adamrtalbot/yarcc_nextflow_config,Config file for use with Nextflow in YARCC,,NF
InformaticsMatters,https://github.com/InformaticsMatters/nextflow-kube,InformaticsMatters/nextflow-kube,,,NF
HelenCousins,https://github.com/HelenCousins/nextflow,HelenCousins/nextflow,,,NF
evanfloden,https://github.com/evanfloden/shuffle-guidance,evanfloden/shuffle-guidance,Nextflow pipeline for creating shuffle and shuffle + Hot/Guidance/Guidance2 alignments,,NF
dggene,https://github.com/dggene/dna,dggene/dna,dnaÂàÜÊûêÊµÅÁ®ã,Apache-2.0,NF
lillamy2012,https://github.com/lillamy2012/fastq_kallisto_star,lillamy2012/fastq_kallisto_star,,,NF
PlantandFoodResearch,https://github.com/PlantandFoodResearch/PFRAutomatedWorkflows,PlantandFoodResearch/PFRAutomatedWorkflows,Collaborative Prototyping and deployment of informatics workflows,GPL-3.0,NF
alperyilmaz,https://github.com/alperyilmaz/nextflow-rnaseq,alperyilmaz/nextflow-rnaseq,amazon aws batch implementation of nextflow/rnaseq-encode-nf tutorial,,NF
Japillow,https://github.com/Japillow/B-method-Project,Japillow/B-method-Project,,,NF
monikaBrandt,https://github.com/monikaBrandt/nf-core-mynewpipeline,monikaBrandt/nf-core-mynewpipeline,This is a test pipeline that I can use to learn how to build a real one.,MIT,NF
bioShaun,https://github.com/bioShaun/omReseq-prepare-nf,bioShaun/omReseq-prepare-nf,A reseq reference prepare pipeline based on nextflow,MIT,NF
SystemsGenetics,https://github.com/SystemsGenetics/KINC-nf,SystemsGenetics/KINC-nf,Nextflow pipeline for KINC,,NF
digitalproteomes,https://github.com/digitalproteomes/NF-DIAUmpire,digitalproteomes/NF-DIAUmpire,DIAUmpire workflow,,NF
ebi-gene-expression-group,https://github.com/ebi-gene-expression-group/scxa-aggregation-workflow,ebi-gene-expression-group/scxa-aggregation-workflow,Aggregation component for SCXA workflows,,NF
UCL-BLIC,https://github.com/UCL-BLIC/merge_fastq,UCL-BLIC/merge_fastq,Nextflow pipeline to merge FastQ files from different lanes,MIT,NF
csiro-crop-informatics,https://github.com/csiro-crop-informatics/nextflow-embl-abr-webinar,csiro-crop-informatics/nextflow-embl-abr-webinar,,Apache-2.0,NF
csawye01,https://github.com/csawye01/nf-core-demultiplex,csawye01/nf-core-demultiplex,Demultiplexing pipeline for Illumina data,MIT,NF
stevekm,https://github.com/stevekm/fastq-checker,stevekm/fastq-checker,quick workflow to validate fastq file integrity,,NF
darachm,https://github.com/darachm/nextflow-barnone,darachm/nextflow-barnone,Runs barnone with a nextflow script,,NF
stevekm,https://github.com/stevekm/nextflow-samplesheet-demo,stevekm/nextflow-samplesheet-demo,samplesheet parsing with Nextflow,,NF
MenheraMikumo,https://github.com/MenheraMikumo/Mao,MenheraMikumo/Mao,Nextflow pipeline prototype,,NF
HugoMananet,https://github.com/HugoMananet/Nextflow_Samtools-merge_gatk4-mutect2,HugoMananet/Nextflow_Samtools-merge_gatk4-mutect2,Nextflow pipeline using containerized tools,,NF
hclimente,https://github.com/hclimente/miallma,hclimente/miallma,üëªTranscriptomic analysis of recurrent leukemias.,,NF
lifebit-ai,https://github.com/lifebit-ai/GangSTR,lifebit-ai/GangSTR,,MIT,NF
SLU-AMB,https://github.com/SLU-AMB/read-preprocessing,SLU-AMB/read-preprocessing,Nextflow script to pre-process Illumina reads for downstream analysis,MIT,NF
lifebit-ai,https://github.com/lifebit-ai/HipSTR,lifebit-ai/HipSTR,,MIT,NF
arontommi,https://github.com/arontommi/nf-mixcr,arontommi/nf-mixcr,,,NF
stevekm,https://github.com/stevekm/bwa-bench,stevekm/bwa-bench,,,NF
csiro-crop-informatics,https://github.com/csiro-crop-informatics/biokanga-manuscript,csiro-crop-informatics/biokanga-manuscript,Reprodcuble manuscript about biokanga  https://github.com/csiro-crop-informatics/biokanga,GPL-3.0,NF
hclimente,https://github.com/hclimente/nori,hclimente/nori,üçô Block HSIC Lasso: laboratory notebook.,,NF
glormph,https://github.com/glormph/nf-core-dda-quant-proteomics,glormph/nf-core-dda-quant-proteomics,Quant proteomics as practiced at Lehti√∂ lab for NF-core,MIT,NF
AndersenLab,https://github.com/AndersenLab/trimmomatic-nf,AndersenLab/trimmomatic-nf,,MIT,NF
AndersenLab,https://github.com/AndersenLab/wi-nf,AndersenLab/wi-nf,,MIT,NF
thanhleviet,https://github.com/thanhleviet/nf-albacore,thanhleviet/nf-albacore,Nextflow script for nanopore base calling with albacore,,NF
grbot,https://github.com/grbot/bioinftk,grbot/bioinftk,Some bioinformatics helpers,MIT,NF
AdrianS85,https://github.com/AdrianS85/RRBS,AdrianS85/RRBS,,,NF
crickbabs,https://github.com/crickbabs/BABS-aDNASeq,crickbabs/BABS-aDNASeq,An ancient DNA nextflow analysis pipeline,NOASSERTION,NF
dfornika,https://github.com/dfornika/nf-core-cpo,dfornika/nf-core-cpo,,MIT,NF
Krebsro,https://github.com/Krebsro/nf-core-neointrons,Krebsro/nf-core-neointrons,This pipeline analyses rna data  deeloped for OvCa and HCC samples,MIT,NF
JWDebler,https://github.com/JWDebler/2018-10-15-annotations,JWDebler/2018-10-15-annotations,Annotation scripts for several ascochyta isolates,,NF
PierreCaillaudM,https://github.com/PierreCaillaudM/distanciel_methodeB,PierreCaillaudM/distanciel_methodeB,,,NF
marler8997,https://github.com/marler8997/LanguageThoughts,marler8997/LanguageThoughts,A repository to document my thoughts and ideas for programming languages.,,NF
brunoand,https://github.com/brunoand/TPM,brunoand/TPM,,,NF
lucacozzuto,https://github.com/lucacozzuto/NF_test_case,lucacozzuto/NF_test_case,nextflow test pipeline,,NF
rlebron-bioinfo,https://github.com/rlebron-bioinfo/methflow,rlebron-bioinfo/methflow,DNA Methylation (BS-Seq) Analysis Pipeline. Started December 2018.,GPL-3.0,NF
heinzlab,https://github.com/heinzlab/csrna,heinzlab/csrna,Heinz lab csRNA-seq pipeline using Nextflow + Singularity,,NF
andreas-wilm,https://github.com/andreas-wilm/nf-core-bacass,andreas-wilm/nf-core-bacass,Simple bacterial assembly and annotation pipeline,MIT,NF
h3abionet,https://github.com/h3abionet/recalling,h3abionet/recalling,Scripts for recalling several available datasets. The final output will be used by different H3A projects  e.g. ADME  refpanel.,MIT,NF
Ackia,https://github.com/Ackia/campylobacter_analysis,Ackia/campylobacter_analysis,Scripts for analysis of Campylobacter from Illumina WGS sequencing,,NF
statgen,https://github.com/statgen/pheweb-rg-pipeline,statgen/pheweb-rg-pipeline,Genetic correlation calculation pipeline via summary statistics for PheWeb,,NF
adamrtalbot,https://github.com/adamrtalbot/kallisto_nf,adamrtalbot/kallisto_nf,Nextflow pipeline for Kallisto pseudoalignment of RNA-Seq data,,NF
lifebit-ai,https://github.com/lifebit-ai/freebayes,lifebit-ai/freebayes,,Apache-2.0,NF
ClaudiuCreanga,https://github.com/ClaudiuCreanga/nextflow,ClaudiuCreanga/nextflow,,,NF
gis-rpd,https://github.com/gis-rpd/rpd-rnaseq,gis-rpd/rpd-rnaseq,An RNASeq pipeline,MIT,NF
rpetit3,https://github.com/rpetit3/illumina-cleanup,rpetit3/illumina-cleanup,A simple pipeline for pre-processing Illumina FASTQ files. ,MIT,NF
lifebit-ai,https://github.com/lifebit-ai/phewas,lifebit-ai/phewas,Performs a PheWAS analysis & generates a Manhattan plot using the PheWAS R package,,NF
cellgeni,https://github.com/cellgeni/cbdemux,cellgeni/cbdemux,Demultiplex bam files on CB field and compute rudimentary per-sample QC,,NF
ggabernet,https://github.com/ggabernet/bcellmagic,ggabernet/bcellmagic,B cell repertoire analysis pipeline.,MIT,NF
SoutheyLab,https://github.com/SoutheyLab/nextflow-workflows,SoutheyLab/nextflow-workflows,,,NF
xg203,https://github.com/xg203/NGS,xg203/NGS,,,NF
Clinical-Genomics-Lund,https://github.com/Clinical-Genomics-Lund/nextflow_test,Clinical-Genomics-Lund/nextflow_test,Proof-on-concet pipeline using Nextflow + Singularity + SLURM,,NF
rbpisupati,https://github.com/rbpisupati/nf-haplocaller,rbpisupati/nf-haplocaller,Nextflow pipeline for GATK best practices (HaplotypeCaller),MIT,NF
ZuberLab,https://github.com/ZuberLab/sra-nf,ZuberLab/sra-nf,Download Raw Reads from SRA Archive,MIT,NF
Gregor-Mendel-Institute,https://github.com/Gregor-Mendel-Institute/bam2fastq_nextflow,Gregor-Mendel-Institute/bam2fastq_nextflow,,,NF
csiro-crop-informatics,https://github.com/csiro-crop-informatics/biokanga_align_paper,csiro-crop-informatics/biokanga_align_paper,,,NF
rsuchecki,https://github.com/rsuchecki/asm,rsuchecki/asm,,GPL-3.0,NF
bioinformatist,https://github.com/bioinformatist/Rua-16SPipe,bioinformatist/Rua-16SPipe,,GPL-3.0,NF
Blang2018,https://github.com/Blang2018/Nextflow,Blang2018/Nextflow,,,NF
tiagofilipe12,https://github.com/tiagofilipe12/pATLAS-db-creation,tiagofilipe12/pATLAS-db-creation,This repository is a test wrapper for the creation ,GPL-3.0,NF
bioinfocz,https://github.com/bioinfocz/scripts,bioinfocz/scripts,Some of our scripts which could be useful.,MIT,NF
bioinformatist,https://github.com/bioinformatist/nf-core-metaamplicon,bioinformatist/nf-core-metaamplicon,A pipeline for (meta-) analysis of amplicon data,MIT,NF
heinzlab,https://github.com/heinzlab/chip-seq-pipeline,heinzlab/chip-seq-pipeline,Heinz lab ChIP-seq pipeline using Nextflow + Singularity,,NF
DoaneAS,https://github.com/DoaneAS/rnaflow,DoaneAS/rnaflow,,,NF
zamanianlab,https://github.com/zamanianlab/AsELV_smRNAseq-nf,zamanianlab/AsELV_smRNAseq-nf,Small RNA-seq analysis for Ascaris ELV project,MIT,NF
nextflow-io,https://github.com/nextflow-io/hello,nextflow-io/hello,Classic hello world script in Nextflow language,GPL-3.0,NF
aunderwo,https://github.com/aunderwo/nextflow-aws-batch-issue-1024,aunderwo/nextflow-aws-batch-issue-1024,Workflow and data for Nextflow issue #1024 ,,NF
brucemoran,https://github.com/brucemoran/exome_HLA,brucemoran/exome_HLA,Calling HLA from exome data with HLAminer in Singularity,,NF
KevinSayers,https://github.com/KevinSayers/nodewf,KevinSayers/nodewf,,,NF
LieberInstitute,https://github.com/LieberInstitute/test_next,LieberInstitute/test_next,Testing nextflow at JHPCE,,NF
kerimoff,https://github.com/kerimoff/qtlquant,kerimoff/qtlquant,pipeline repo for qtlquant,MIT,NF
Leon-Bichmann,https://github.com/Leon-Bichmann/MHCquant,Leon-Bichmann/MHCquant,Identify and quantify peptides from mass spectrometry raw data,MIT,NF
mes5k,https://github.com/mes5k/nf-test,mes5k/nf-test,simple test for nextflow,,NF
ObenaufLab,https://github.com/ObenaufLab/sv-calling-nf,ObenaufLab/sv-calling-nf,Nextflow workflow for SV calling using delly2  lumpy  manta and BRASS. ,MIT,NF
abradle,https://github.com/abradle/nf-ena,abradle/nf-ena,,,NF
davismcc,https://github.com/davismcc/nf-hipsci-fibro,davismcc/nf-hipsci-fibro,,MIT,NF
cbcrg,https://github.com/cbcrg/msa-benchmark,cbcrg/msa-benchmark,,,NF
Biocentric,https://github.com/Biocentric/DeepVariantNF,Biocentric/DeepVariantNF,Nextflow variation on Googles DeepVariant by Lifebit. Modified to run test on AWS Batch,Apache-2.0,NF
IARCbioinfo,https://github.com/IARCbioinfo/PostAlignment-nf,IARCbioinfo/PostAlignment-nf,,GPL-3.0,NF
Ackia,https://github.com/Ackia/AMB_MAG_Summer_2018,Ackia/AMB_MAG_Summer_2018,MAG analysis for AMB group  GATC sequencing summer 2018,NOASSERTION,NF
Mud-Fire,https://github.com/Mud-Fire/QC_Model_rna_nf,Mud-Fire/QC_Model_rna_nf,DG QC model Up,Apache-2.0,NF
maxibor,https://github.com/maxibor/coproID,maxibor/coproID,Coprolite host Identification,GPL-3.0,NF
caspargross,https://github.com/caspargross/PlasmIdent,caspargross/PlasmIdent,Pipeline for identification of circular plasmids from genome assemblies and resistance gene annotation,,NF
huguesfontenelle,https://github.com/huguesfontenelle/bug_nextflow_projectDir,huguesfontenelle/bug_nextflow_projectDir,,,NF
dfornika,https://github.com/dfornika/cpo-pipeline-nextflow,dfornika/cpo-pipeline-nextflow,,MIT,NF
brionmario,https://github.com/brionmario/b-specification-spaceship-asteroids-game,brionmario/b-specification-spaceship-asteroids-game,B specification of a very simple version of the old Spaceship & Asteroids arcade game  using the B tools Atelier B & ProB.,MIT,NF
SystemsGenetics,https://github.com/SystemsGenetics/gene-oracle-nf,SystemsGenetics/gene-oracle-nf,Nextflow pipeline for Gene Oracle,,NF
jguhlin,https://github.com/jguhlin/SameSpeciesLiftover_nf,jguhlin/SameSpeciesLiftover_nf,Same Species Liftover pipeline implemented in Nextflow,BSD-3-Clause,NF
abremges,https://github.com/abremges/TreeHugger,abremges/TreeHugger,Phylogenetic assignment and tree inference using defined marker gene sets,Apache-2.0,NF
hdzierz,https://github.com/hdzierz/bioinf_Russell_genome,hdzierz/bioinf_Russell_genome,,,NF
ObenaufLab,https://github.com/ObenaufLab/variant-circos-nf,ObenaufLab/variant-circos-nf,Nextflow workflow for circos visualizations of variant data.,AGPL-3.0,NF
edgano,https://github.com/edgano/TCoffee-NatureProtocol-nf,edgano/TCoffee-NatureProtocol-nf,Tutorial to run the TCoffee Nature Protocol using Nextflow,MIT,NF
mruehlemann,https://github.com/mruehlemann/LaMeta,mruehlemann/LaMeta,LaMeta - getting more from your metagenomic data (like you used to...),BSD-3-Clause,NF
cimendes,https://github.com/cimendes/metaFlow,cimendes/metaFlow,A nextflow implementation of a metagenomics pipeline,,NF
JWDebler,https://github.com/JWDebler/nf-repeats,JWDebler/nf-repeats,annotate repeats,,NF
lifebit-ai,https://github.com/lifebit-ai/ExpansionHunter,lifebit-ai/ExpansionHunter,,MIT,NF
IARCbioinfo,https://github.com/IARCbioinfo/TCGA_platypus-nf,IARCbioinfo/TCGA_platypus-nf,nextflow pipeline to build annovar-ready tables from platypus TCGA calling,GPL-3.0,NF
lch14forever,https://github.com/lch14forever/nexflow_pipelines,lch14forever/nexflow_pipelines,,,NF
melnel000,https://github.com/melnel000/Sarek_CBIO,melnel000/Sarek_CBIO,,MIT,NF
lakinsm,https://github.com/lakinsm/summit-assembly,lakinsm/summit-assembly,Assembly pipeline for the Boulder Summit HPC cluster,,NF
zichner,https://github.com/zichner/nextflow-pull-test,zichner/nextflow-pull-test,,,NF
remiolsen,https://github.com/remiolsen/nf-core-radseq,remiolsen/nf-core-radseq,Pipeline for QC of RAD-seq data,MIT,NF
Polluux,https://github.com/Polluux/AtelierB_Domotique,Polluux/AtelierB_Domotique,M2 Project for Atelier B,,NF
digitalproteomes,https://github.com/digitalproteomes/NF-ConvertThermo,digitalproteomes/NF-ConvertThermo,,,NF
lifebit-ai,https://github.com/lifebit-ai/somatic-variant-caller,lifebit-ai/somatic-variant-caller,Somatic variant calling pipeline using Mutect2 adapted from GATK Best Practices,,NF
KevinSayers,https://github.com/KevinSayers/SingularityScheduler,KevinSayers/SingularityScheduler,,,NF
AndersenLab,https://github.com/AndersenLab/nil-ril-nf,AndersenLab/nil-ril-nf,Nextflow pipeline for calling NILs and RILs,MIT,NF
lillamy2012,https://github.com/lillamy2012/rna_seq_kallisto1,lillamy2012/rna_seq_kallisto1,nextflow pipeline for single read rna-seq,,NF
mclaugsf,https://github.com/mclaugsf/seqtk-nextflow,mclaugsf/seqtk-nextflow,A simple seqtk nextflow AWS Batch test workflow,,NF
crickbabs,https://github.com/crickbabs/nextflow_toolbox,crickbabs/nextflow_toolbox,A toy Nextflow pipeline that contains useful programming constructs,,NF
bsjo,https://github.com/bsjo/hello,bsjo/hello,,GPL-3.0,NF
JWDebler,https://github.com/JWDebler/nf-occultercut,JWDebler/nf-occultercut,compare and plot GC content of genomes,,NF
evanfloden,https://github.com/evanfloden/embeded-analysis-nf,evanfloden/embeded-analysis-nf,Analysis to determine the effect of the inclusion of more sequences in large MSA,,NF
lifebit-ai,https://github.com/lifebit-ai/DeepVariantTrain,lifebit-ai/DeepVariantTrain,,Apache-2.0,NF
lisemangiante,https://github.com/lisemangiante/test_nextflow,lisemangiante/test_nextflow,,GPL-3.0,NF
KevinMenden,https://github.com/KevinMenden/tf-activity,KevinMenden/tf-activity,Workflow to identify active transcription factors from CAGE-seq data.,MIT,NF
faithman,https://github.com/faithman/Single_end_mRNAseq-nf,faithman/Single_end_mRNAseq-nf,For single end RNA-seq  quality control,,NF
remiolsen,https://github.com/remiolsen/nf-core-neutronstar,remiolsen/nf-core-neutronstar,Main fork is here: https://github.com/SciLifeLab/NGI-NeutronStar,MIT,NF
Gustius,https://github.com/Gustius/MOFA,Gustius/MOFA,,MIT,NF
sinonkt,https://github.com/sinonkt/gemini-load-nf,sinonkt/gemini-load-nf,Gemini preprocessing & loading workflow encoded in Nextflow ,,NF
Gustius,https://github.com/Gustius/MOFA,Gustius/MOFA,,MIT,NF
remiolsen,https://github.com/remiolsen/nf-core-neutronstar,remiolsen/nf-core-neutronstar,Main fork is here: https://github.com/SciLifeLab/NGI-NeutronStar,MIT,NF
sergpolly,https://github.com/sergpolly/random-nextflow-utils,sergpolly/random-nextflow-utils,just trying to apply nextflow to some low-level data-management,MIT,NF
lifebit-ai,https://github.com/lifebit-ai/docker-impute2,lifebit-ai/docker-impute2,,,NF
digitalproteomes,https://github.com/digitalproteomes/NF-PrepareProteinDB,digitalproteomes/NF-PrepareProteinDB,Download and prepare a UniProt fasta database,,NF
vibbits,https://github.com/vibbits/NextFlow_pipelines,vibbits/NextFlow_pipelines,Tricks and tips for designing a NextFlow pipeline,,NF
PiscatorX,https://github.com/PiscatorX/videre-pipeline,PiscatorX/videre-pipeline,Pipeline for metranscriptome data,,NF
jguhlin,https://github.com/jguhlin/gf-targeted-prediction,jguhlin/gf-targeted-prediction,Targeted gene family prediction using AUGSTUS-PPX  Nextflow  exonerate  etc...,BSD-3-Clause,NF
dznetubingen,https://github.com/dznetubingen/hybrid_assembly_hamburg,dznetubingen/hybrid_assembly_hamburg,Hamburg assembly instance for hamburg computer (temporary repo),MIT,NF
LBMC,https://github.com/LBMC/readthroughpombe,LBMC/readthroughpombe,Readthrough analysis in S. Pombe rrp6D and cut14-208 mutants,NOASSERTION,NF
dalmiaa,https://github.com/dalmiaa/Sample_NF,dalmiaa/Sample_NF,Example pipeline to understand NF.,MIT,NF
brunoand,https://github.com/brunoand/16MP,brunoand/16MP,,,NF
stevekm,https://github.com/stevekm/tmb-signatures-analysis,stevekm/tmb-signatures-analysis,Tumor mutation burden & genomic signatures analysis workflow,,NF
AndersenLab,https://github.com/AndersenLab/SEmRNA-seq-nf,AndersenLab/SEmRNA-seq-nf,mRNA-seq pipeline,MIT,NF
inab,https://github.com/inab/RDConnect_RNASeq,inab/RDConnect_RNASeq,RDConnect RNASeq,,NF
bioShaun,https://github.com/bioShaun/xms-rnaseq-nf,bioShaun/xms-rnaseq-nf,A kallisto quantification pipeline based on nextflow,MIT,NF
renatomsoares,https://github.com/renatomsoares/ProjetosMetodosFormais,renatomsoares/ProjetosMetodosFormais,,,NF
AndersenLab,https://github.com/AndersenLab/linkagemapping-nf,AndersenLab/linkagemapping-nf,,,NF
BrianLohman,https://github.com/BrianLohman/workflows,BrianLohman/workflows,Workflows with Nextflow,,NF
ObenaufLab,https://github.com/ObenaufLab/virus-detection-nf,ObenaufLab/virus-detection-nf,Nextflow workflow for virus detection  integration site mapping and splice-variant detection.,MIT,NF
JWDebler,https://github.com/JWDebler/nf-assembly,JWDebler/nf-assembly,Assembly and basic annotation of Illumina short reads,,NF
lengfei5,https://github.com/lengfei5/smallRNA_nf,lengfei5/smallRNA_nf,,,NF
arzwa,https://github.com/arzwa/whaleprep,arzwa/whaleprep,Nextflow pipeline for preparatory analyses for Whale,,NF
likelet,https://github.com/likelet/circPipe,likelet/circPipe,FTW,MIT,NF
matthiasheinig,https://github.com/matthiasheinig/scworkflows,matthiasheinig/scworkflows,,,NF
ebi-gene-expression-group,https://github.com/ebi-gene-expression-group/scxa-bundle-workflow,ebi-gene-expression-group/scxa-bundle-workflow,Workflow for making bundles for Single-cell Expression Atlas,,NF
hclimente,https://github.com/hclimente/gwas-tools,hclimente/gwas-tools,üõ†Ô∏è Short pipelines to deal with GWAS data.,,NF
Dowell-Lab,https://github.com/Dowell-Lab/Nascent-Flow,Dowell-Lab/Nascent-Flow,Nascent Transcription Processing Pipeline,MIT,NF
Tintest,https://github.com/Tintest/Test_nextflow_OAR,Tintest/Test_nextflow_OAR,,,NF
Ackia,https://github.com/Ackia/e_hirae_analysis,Ackia/e_hirae_analysis,Analysis of E.Hirae WGS sequencing data,,NF
ZuberLab,https://github.com/ZuberLab/crispr-process-nf,ZuberLab/crispr-process-nf,Process CRISPR and shRNA functional genetic screening data,MIT,NF
ZuberLab,https://github.com/ZuberLab/vbcf-nf,ZuberLab/vbcf-nf,Retrieve Files from VBCF Sequencing Facility,MIT,NF
SoutheyLab,https://github.com/SoutheyLab/nextflow_pipeline,SoutheyLab/nextflow_pipeline,,,NF
robsyme,https://github.com/robsyme/nf-nucmercoverage,robsyme/nf-nucmercoverage,A humble nextflow pipeline to compare the coverage of some reference genome(s) by nucmer matches of some other genomes. Produces svg (gg)plots.,,NF
HugoMananet,https://github.com/HugoMananet/Nextflow_Samtools_VarScan,HugoMananet/Nextflow_Samtools_VarScan,Nextflow pipeline using containerized tools,,NF
vinujose,https://github.com/vinujose/nxfTest,vinujose/nxfTest,A sample workflow with two connected processes using Nextflow.,,NF
renyiwu,https://github.com/renyiwu/hpc,renyiwu/hpc,,,NF
ChristopherBarrington,https://github.com/ChristopherBarrington/nf-core-hic,ChristopherBarrington/nf-core-hic,,MIT,NF
sinonkt,https://github.com/sinonkt/gwas-qc-nf,sinonkt/gwas-qc-nf,Quality control procedures for genome-wide association studies paper  another encoded version in nextflow.,,NF
huguesfontenelle,https://github.com/huguesfontenelle/bug_exit_signal,huguesfontenelle/bug_exit_signal,,,NF
marcodelapierre,https://github.com/marcodelapierre/md-nextflow,marcodelapierre/md-nextflow,Sample Nextflow pipeline(s),GPL-3.0,NF
herobd,https://github.com/herobd/forms_annotations,herobd/forms_annotations,Annotations for form images from National Archive.,,NF
rynge,https://github.com/rynge/searchsra-nextflow,rynge/searchsra-nextflow,,,NF
cpang429,https://github.com/cpang429/directrna,cpang429/directrna,Nanopore pipeline for processing long-read RNA-Seq data,MIT,NF
sbilge,https://github.com/sbilge/nf-core-clinvap,sbilge/nf-core-clinvap,,MIT,NF
Molmed,https://github.com/Molmed/summary-report-development,Molmed/summary-report-development,Prototype for a new type of summary report for flowcells  that is going to be real awesome!,,NF
QuentinLetourneur,https://github.com/QuentinLetourneur/Let-it-bin,QuentinLetourneur/Let-it-bin,Optimize workflow for binning metagenomic short reads from multiple samples,,NF
Etjean,https://github.com/Etjean/Long_project,Etjean/Long_project,Nextflow pipeline and Docker integration into Shaman,,NF
DoaneAS,https://github.com/DoaneAS/realign.nf,DoaneAS/realign.nf,nextflow pipeline for bam file realignment,,NF
lmyiing,https://github.com/lmyiing/scnew,lmyiing/scnew,update config file,,NF
bhattlab,https://github.com/bhattlab/wits_workshop,bhattlab/wits_workshop,,,NF
Thatguy027,https://github.com/Thatguy027/CePopulationGenetics-nf,Thatguy027/CePopulationGenetics-nf,Nextflow Pipeline for PopGen Analysis of C. elegans,,NF
IARCbioinfo,https://github.com/IARCbioinfo/NGSCheckMate,IARCbioinfo/NGSCheckMate,Nextflow pipeline to detect matched BAMs with NGSCheckMate,GPL-3.0,NF
davideyre,https://github.com/davideyre/bug-flow,davideyre/bug-flow,,NOASSERTION,NF
uct-cbio,https://github.com/uct-cbio/bacterial_variant_calling,uct-cbio/bacterial_variant_calling,A pipeline for variant calling on bacterial genomes created with Nextflow and singularity / docker,MIT,NF
grbot,https://github.com/grbot/run-fastqc,grbot/run-fastqc,Nextflow pipeline to test Singularity and SLURM for H3ABioNet GWAS workshop 2018,MIT,NF
brunoand,https://github.com/brunoand/NMP,brunoand/NMP,,,NF
ebi-gene-expression-group,https://github.com/ebi-gene-expression-group/scanpy-workflow,ebi-gene-expression-group/scanpy-workflow,Workflow leveraging the scanpy-scripts package to run Scanpy in a Nextflow workflow,,NF
inab,https://github.com/inab/TCGA_benchmarking_workflow,inab/TCGA_benchmarking_workflow,,LGPL-2.1,NF
ecerami,https://github.com/ecerami/nextflow_sandbox,ecerami/nextflow_sandbox,NextFlow SandBox,,NF
crickbabs,https://github.com/crickbabs/nf-core-atacseq,crickbabs/nf-core-atacseq,See the main fork of this repository here >>> ,MIT,NF
lillamy2012,https://github.com/lillamy2012/atac4Mike,lillamy2012/atac4Mike,ATAC-seq pipeline for Mikes project ,,NF
AndersenLab,https://github.com/AndersenLab/alignment-nf,AndersenLab/alignment-nf,A nextflow pipeline for genome sequences alignment,MIT,NF
JWDebler,https://github.com/JWDebler/nf-augustus_with_RNASeq,JWDebler/nf-augustus_with_RNASeq,,,NF
jemten,https://github.com/jemten/mt_snv_gatk4,jemten/mt_snv_gatk4,Call mitochondrial variants from bam file using haplotypecaller from GATK4,MIT,NF
DIRT-Webplatform,https://github.com/DIRT-Webplatform/dirt2d,DIRT-Webplatform/dirt2d,Workflow for dirt2d,,NF
Biocentric,https://github.com/Biocentric/rnaseq_debug,Biocentric/rnaseq_debug,Nextflows RNA-Seq edit for debugging,,NF
ParisDiderot-Bioinfo,https://github.com/ParisDiderot-Bioinfo/nextflow-intro,ParisDiderot-Bioinfo/nextflow-intro,Introduction to Nextflow,,NF
PayamEmami,https://github.com/PayamEmami/tmp,PayamEmami/tmp,,,NF
darcyabjones,https://github.com/darcyabjones/snptree,darcyabjones/snptree,A nextflow pipeline to run phylogenetic analyses using SNPs,,NF
fagnerdias,https://github.com/fagnerdias/ProjetoB,fagnerdias/ProjetoB,,,NF
IARCbioinfo,https://github.com/IARCbioinfo/svaba-nf,IARCbioinfo/svaba-nf,,GPL-3.0,NF
heinzlab,https://github.com/heinzlab/smrna-seq-pipeline,heinzlab/smrna-seq-pipeline,Heinz lab smRNA-seq pipeline using Nextflow + Singularity,,NF
ccario83,https://github.com/ccario83/workflows,ccario83/workflows,Some nextflow script templates for sequencing workflows,,NF
rsuchecki,https://github.com/rsuchecki/radsddrad,rsuchecki/radsddrad,,Apache-2.0,NF
jianhong,https://github.com/jianhong/ATACseqQCnextflow,jianhong/ATACseqQCnextflow,pipeline for ATACseqQC,GPL-3.0,NF
J35P312,https://github.com/J35P312/TayWhale,J35P312/TayWhale,RNA-seq pipeline,,NF
bioShaun,https://github.com/bioShaun/omReseq-nf,bioShaun/omReseq-nf,Onmath reseq pipeline based on nextflow,,NF
agartland,https://github.com/agartland/rnaseq_prep,agartland/rnaseq_prep,Dockerfile specifying programs for processing RNA seq data,,NF
bioinfo-dirty-jobs,https://github.com/bioinfo-dirty-jobs/Data,bioinfo-dirty-jobs/Data,,,NF
lifebit-ai,https://github.com/lifebit-ai/fam-gwas,lifebit-ai/fam-gwas,Family-based GWAS analysis pipeline,,NF
Reda94,https://github.com/Reda94/GDC-RNAseq-pipeline,Reda94/GDC-RNAseq-pipeline,Implementation of GDC's (Genomic Data Commons) RNA-seq analysis pipeline (data release version 14.0) using Nextflow.,,NF
gnetsanet,https://github.com/gnetsanet/crispedit,gnetsanet/crispedit,Nextflow pipeline for inference of CRISPR edits from NGS (Amplicon Sequencing) data,MIT,NF
connor-lab,https://github.com/connor-lab/nextflow_pipelines,connor-lab/nextflow_pipelines,Nextflow pipeline script  config and ancillary files for PHW PenGU sequencing,,NF
mtstahl,https://github.com/mtstahl/togetherforever,mtstahl/togetherforever,You like it or not  but transcriptome and proteome are stronger together!,,NF
lifebit-ai,https://github.com/lifebit-ai/impute500k,lifebit-ai/impute500k,,,NF
ebi-gene-expression-group,https://github.com/ebi-gene-expression-group/scxa-smartseq-quantification-workflow,ebi-gene-expression-group/scxa-smartseq-quantification-workflow,The SCXA smart-seq quantification workflow,,NF
CRG-CNAG,https://github.com/CRG-CNAG/EOSC-Pilot,CRG-CNAG/EOSC-Pilot,EOSC pilot project,MPL-2.0,NF
Reda94,https://github.com/Reda94/QuantSeq-3-prime-FWD-RNAseq-pipeline,Reda94/QuantSeq-3-prime-FWD-RNAseq-pipeline,Implementation of the RNA-Seq analysis pipeline used on sequencing data obtained from Lexogen's QuantSeq FWD 3' mRNA-Seq kit.,,NF
qbicsoftware,https://github.com/qbicsoftware/microarray-qc-workflow,qbicsoftware/microarray-qc-workflow,Quality Control plots and data normalisation for Microarray data,MIT,NF
apeltzer,https://github.com/apeltzer/IGCG-featureCounts,apeltzer/IGCG-featureCounts,A Nextflow script to run featureCounts on RNAseq BAM files on ICGC in AWS (with AWS Batch),MIT,NF
epiBioCore,https://github.com/epiBioCore/RNA-Seq-Pipeline,epiBioCore/RNA-Seq-Pipeline,,,NF
ObenaufLab,https://github.com/ObenaufLab/battenberg-nf,ObenaufLab/battenberg-nf,Nextflow workflow for Battenberg to detect subclonality and copy number in matched NGS data,MIT,NF
ODiogoSilva,https://github.com/ODiogoSilva/cbbs-nf,ODiogoSilva/cbbs-nf,,,NF
Insomnia-Team,https://github.com/Insomnia-Team/Catraca-B,Insomnia-Team/Catraca-B,A B method adaptation of a real world access system of a university restaurant,,NF
gcollet,https://github.com/gcollet/bug_nextflow,gcollet/bug_nextflow,,,NF
PayamEmami,https://github.com/PayamEmami/tm2,PayamEmami/tm2,,,NF
kratikanaskulwar,https://github.com/kratikanaskulwar/kmerextraction,kratikanaskulwar/kmerextraction,This pipeline extracts sequences of all the listed genes of E-coli and extracts the k-mers from the sequences.,,NF
vinujose,https://github.com/vinujose/nxfSingularity,vinujose/nxfSingularity,A sample workflow using Singularity containers and Nextflow.,,NF
AlfredUg,https://github.com/AlfredUg/qiime2-pipeline,AlfredUg/qiime2-pipeline,qiime2 pipeline for analysis of 16S rRNA microbiome data,,NF
caspargross,https://github.com/caspargross/HybridAssembly,caspargross/HybridAssembly,Nextflow pipeline for hybrid assembly combining short read (Illumina) and long read (Nanopore) data.,,NF
mchimenti,https://github.com/mchimenti/ATAC_seq_nextflow,mchimenti/ATAC_seq_nextflow,A "bare bones" ATAC_seq pipeline using NGmerge/Genrich from Harvard FAS best practices ,,NF
noelnamai,https://github.com/noelnamai/thesis,noelnamai/thesis,A Large Scale  Cloud Based  Low Cost and Reproducible Mutation Calling Pipeline Using Docker Containers,,NF
sridharsh,https://github.com/sridharsh/NextGenSeeker,sridharsh/NextGenSeeker,,,NF
ncsa,https://github.com/ncsa/GenomicsCortextVarNextflow,ncsa/GenomicsCortextVarNextflow,,,NF
komparo,https://github.com/komparo/tde_dataset_dyntoy,komparo/tde_dataset_dyntoy,,,NF
lmyiing,https://github.com/lmyiing/scrnaseq,lmyiing/scrnaseq,first release nextflow,,NF
stevekm,https://github.com/stevekm/vcf-filter-annotate,stevekm/vcf-filter-annotate,,,NF
AndersenLab,https://github.com/AndersenLab/concordance-nf,AndersenLab/concordance-nf,,MIT,NF
abremges,https://github.com/abremges/x,abremges/x,,,NF
faithman,https://github.com/faithman/subsample-nf,faithman/subsample-nf,Use seqtk to subsample the RNA-seq data,,NF
JWDebler,https://github.com/JWDebler/nf-busco,JWDebler/nf-busco,,,NF
OberstHorst,https://github.com/OberstHorst/nextflowKubeDemo,OberstHorst/nextflowKubeDemo,,,NF
fujimuramasa,https://github.com/fujimuramasa/Align,fujimuramasa/Align,,,NF
dfornika,https://github.com/dfornika/nf-core-routine-nanopore-processing,dfornika/nf-core-routine-nanopore-processing,,MIT,NF
lifebit-ai,https://github.com/lifebit-ai/Plant-RNASeq,lifebit-ai/Plant-RNASeq,Nextflow pipeline to analyse gene expression in plants,MIT,NF
BU-ISCIII,https://github.com/BU-ISCIII/PikaVirus,BU-ISCIII/PikaVirus,Open source software that implements a new method for metagenomics analysis. A new mapping approach is integrated with traditional assembly and blast annotation  all integrated in a web-based user friendly visualization platform for ease interpretation.,,NF
simozhou,https://github.com/simozhou/epi-awesome,simozhou/epi-awesome,,MIT,NF
pgoymann,https://github.com/pgoymann/nextflow_fastqc,pgoymann/nextflow_fastqc,,,NF
phelelani,https://github.com/phelelani/nf-rnaSeqMetagen,phelelani/nf-rnaSeqMetagen,Metagenomics pipeline,,NF
ebenz99,https://github.com/ebenz99/MPCM-Nextflow,ebenz99/MPCM-Nextflow,A Nextflow pipeline for the Birtwistle Lab's Mechanistic Pan-Cancer Modeler,,NF
common-workflow-language,https://github.com/common-workflow-language/common-workflow-language,common-workflow-language/common-workflow-language,Repository for the CWL standards. Use https://www.biostars.org/t/cwl/ for support üòä,Apache-2.0,CWL
common-workflow-language,https://github.com/common-workflow-language/cwltool,common-workflow-language/cwltool,Common Workflow Language reference implementation,Apache-2.0,CWL
vczh-libraries,https://github.com/vczh-libraries/Workflow,vczh-libraries/Workflow,Debuggable script language for interoperation with C++ using reflection.,NOASSERTION,CWL
thomashempel,https://github.com/thomashempel/AlfredGoogleTranslateWorkflow,thomashempel/AlfredGoogleTranslateWorkflow,A workflow for Alfred that implements translation from any language to any other language that is supported by google,MIT,CWL
openwdl,https://github.com/openwdl/wdl,openwdl/wdl,Workflow Description Language - Specification and Implementations,BSD-3-Clause,CWL
yawlfoundation,https://github.com/yawlfoundation/yawl,yawlfoundation/yawl,Yet Another Workflow Language,LGPL-3.0,CWL
rabix,https://github.com/rabix/composer,rabix/composer,Visual and code editor for Common Workflow Language,Apache-2.0,CWL
knat,https://github.com/knat/Metah,knat/Metah,A Workflow Metaprogramming Language,NOASSERTION,CWL
rabix,https://github.com/rabix/cwl-ts,rabix/cwl-ts,Typescript data model for Common Workflow Language,Apache-2.0,CWL
joergen7,https://github.com/joergen7/cuneiform,joergen7/cuneiform,Cuneiform distributed programming language,Apache-2.0,CWL
hacchy1983,https://github.com/hacchy1983/CWL-workflows,hacchy1983/CWL-workflows,Workflows written in common workflow language (CWL),GPL-3.0,CWL
sahilseth,https://github.com/sahilseth/flowr,sahilseth/flowr,Robust and efficient workflows using a simple language agnostic approach,NOASSERTION,CWL
pitagora-galaxy,https://github.com/pitagora-galaxy/cwl,pitagora-galaxy/cwl,Common Workflow Language tools and workflows by Pitagora-Network,,CWL
deanishe,https://github.com/deanishe/alfred-searchio,deanishe/alfred-searchio,Alfred workflow to auto-suggest search results from multiple search engines and languages.,MIT,CWL
luci,https://github.com/luci/recipes-py,luci/recipes-py,A testable  cross-platform  workflow description language (in python).,Apache-2.0,CWL
bcbio,https://github.com/bcbio/bcbio_validation_workflows,bcbio/bcbio_validation_workflows,A community menagarie of automated variant validations using bcbio and the Common Workflow Language,MIT,CWL
acacha,https://github.com/acacha/llum,acacha/llum,Llum (light in catalan language) illuminates your Laravel projects speeding up your Github/Laravel development workflow,MIT,CWL
common-workflow-language,https://github.com/common-workflow-language/cwlviewer,common-workflow-language/cwlviewer,A web application to view and share Common Workflow Language workflows,Apache-2.0,CWL
common-workflow-language,https://github.com/common-workflow-language/common-workflow-language.github.io,common-workflow-language/common-workflow-language.github.io,GitHub pages source for the main CWL website  derived from https://github.com/common-workflow-language/cwl-website,,CWL
Dasync,https://github.com/Dasync/Dasync,Dasync/Dasync,Distributed services and workflows with C#-native language features,NOASSERTION,CWL
common-workflow-language,https://github.com/common-workflow-language/wdl2cwl,common-workflow-language/wdl2cwl,Convert Workflow Definition Language (WDL) to CWL,Apache-2.0,CWL
epam,https://github.com/epam/pipeline-builder,epam/pipeline-builder,Pipeline Builder is a JavaScript library for visualizing and constructing bioinformatics workflows  using Workflow Description Language (WDL),MIT,CWL
bcbio,https://github.com/bcbio/test_bcbio_cwl,bcbio/test_bcbio_cwl,Test workflows  run scripts and data for bcbio Common Workflow Language integration,MIT,CWL
dnanexus,https://github.com/dnanexus/dxWDL,dnanexus/dxWDL,Workflow Description Language compiler for the DNAnexus platform,Apache-2.0,CWL
chanzuckerberg,https://github.com/chanzuckerberg/miniwdl,chanzuckerberg/miniwdl,A static analysis toolkit for the Workflow Description Language,MIT,CWL
scipipe,https://github.com/scipipe/scipipe,scipipe/scipipe,SciPipe is a library for writing scientific workflows (sometimes also called "pipelines") of shell commands that depend on each other  in the Go programming language (aka golang). It was initially designed for problems in cheminformatics and bioinformatics  but applies equally well to any domain involving complex pipelines of interdependent shell commands.,MIT,CWL
nlppln,https://github.com/nlppln/nlppln,nlppln/nlppln,NLP pipeline software using common workflow language,Apache-2.0,CWL
taverna,https://github.com/taverna/taverna-scufl2,taverna/taverna-scufl2,SCUFL2 Taverna workflow language and API,,CWL
LanguageMachines,https://github.com/LanguageMachines/LuigiNLP,LanguageMachines/LuigiNLP,A workflow system for Natural Language Processing.,GPL-3.0,CWL
LanguageMachines,https://github.com/LanguageMachines/PICCL,LanguageMachines/PICCL,A set of workflows for corpus building through OCR  post-correction  modernization of historic language and Natural Language Processing,GPL-3.0,CWL
mpaiva,https://github.com/mpaiva/material-resume,mpaiva/material-resume,Professional Resume using Google's Material Design visual language. Built using modern web development workflow tools  such as Bower for package mamagement  Gulp and plugins for web development task management  Jade as HTML template language and Materialize SASS as CSS scaffolding. ,,CWL
zhanxw,https://github.com/zhanxw/wdl-mode,zhanxw/wdl-mode,WDL (Workflow Description Language) major mode,GPL-3.0,CWL
nanw16,https://github.com/nanw16/RstanWorkflow,nanw16/RstanWorkflow,We would like create Bayesian workflows following "A quick-start introduction to Stan for economists" by Jim Savage for all example models in Stan Modeling Language User's Guide and Reference Manual by Stan Development Team.,,CWL
Kunstmaan,https://github.com/Kunstmaan/KunstmaanBundlesCMS,Kunstmaan/KunstmaanBundlesCMS,An advanced yet user-friendly content management system  based on the full stack Symfony framework combined with a whole host of community bundles. It provides a full featured  multi-language CMS system with an innovative page and form assembling process  versioning  workflow  translation and media managers and much more.,MIT,CWL
maasha,https://github.com/maasha/BioDSL,maasha/BioDSL,BioDSL (pronounced Biodiesel) is a Domain Specific Language for creating bioinformatic analysis workflows.,GPL-2.0,CWL
NBISweden,https://github.com/NBISweden/workflow-tools-evaluation,NBISweden/workflow-tools-evaluation,Evaluating workflow tools and formats  such as the Common Workflow Language (CWL) for possible use within NBIS,,CWL
4dn-dcic,https://github.com/4dn-dcic/pipelines-cwl,4dn-dcic/pipelines-cwl,Pipelines developed and used by 4DN-DCIC in Common Workflow Language,MIT,CWL
TMiguelT,https://github.com/TMiguelT/vue-cwl,TMiguelT/vue-cwl,Visualizer of CWL (Common Workflow Language) workflows for Vue,GPL-3.0,CWL
screx,https://github.com/screx/cwl-tutorial,screx/cwl-tutorial,This is a tutorial for Common Workflow Language (CWL),,CWL
xflows,https://github.com/xflows/textflows,xflows/textflows,TextFlows is an open-source online platform for composition  execution  and sharing of interactive text mining and natural language processing workflows. ,MIT,CWL
morloc-project,https://github.com/morloc-project/morloc,morloc-project/morloc,A typed  multilingual  functional workflow language,GPL-3.0,CWL
wmfs,https://github.com/wmfs/statebox,wmfs/statebox,Orchestrate workflows using Amazon States Language,MIT,CWL
joergen7,https://github.com/joergen7/cuneiform-legacy,joergen7/cuneiform-legacy,A Functional Workflow Language,Apache-2.0,CWL
common-workflow-language,https://github.com/common-workflow-language/cwldep,common-workflow-language/cwldep,Common Workflow Language dependency manager,Apache-2.0,CWL
CancerCollaboratory,https://github.com/CancerCollaboratory/dockstore-tool-bedgraph-bigwig,CancerCollaboratory/dockstore-tool-bedgraph-bigwig,From https://github.com/common-workflow-language/workflows,,CWL
ohsu-comp-bio,https://github.com/ohsu-comp-bio/common_workflow_language_schema,ohsu-comp-bio/common_workflow_language_schema,Jsonnet documents for building a Common Workflow Language Avro protocol,MIT,CWL
prometheusresearch,https://github.com/prometheusresearch/action,prometheusresearch/action,Language for composable data-driven workflows,NOASSERTION,CWL
pvanheus,https://github.com/pvanheus/repeatmasker_cwl,pvanheus/repeatmasker_cwl,Common Workflow Language tool definition for RepeatMasker,GPL-3.0,CWL
buchanae,https://github.com/buchanae/cwl,buchanae/cwl,common workflow language library and runtime,MIT,CWL
UMCUGenetics,https://github.com/UMCUGenetics/gwl-atacseq,UMCUGenetics/gwl-atacseq,ATACseq pipeline using the Guix Workflow Language.,GPL-3.0,CWL
mikehadlow,https://github.com/mikehadlow/Mike.DistributedLua,mikehadlow/Mike.DistributedLua,A sample using Lua as a distributed workflow scripting language,,CWL
MatheusWorkflow,https://github.com/MatheusWorkflow/WorkFlow,MatheusWorkflow/WorkFlow, language C,,CWL
zena,https://github.com/zena/multiversion,zena/multiversion,Publication workflow and version / language management.,,CWL
andersgs,https://github.com/andersgs/cwl_flows,andersgs/cwl_flows,Some common workflow language flows.,,CWL
andrewjesaitis,https://github.com/andrewjesaitis/cwl-tutorial,andrewjesaitis/cwl-tutorial,Tutorial for the Common Workflow Language using SnpEff,MIT,CWL
vgteam,https://github.com/vgteam/vg_wdl,vgteam/vg_wdl,Workflow Description Language (WDL) scripts for common vg workflows,MIT,CWL
rabix,https://github.com/rabix/benten,rabix/benten,[Pre-alpha] Workflow helper for Common Workflow Language,Apache-2.0,CWL
rheadsh,https://github.com/rheadsh/baffects.js,rheadsh/baffects.js,Baffects.js is a library adaptation in JavaScript for Adobe After Effects of the Processing language. It allows for most of the functionality included in Processing to be used natively in After Effects  plus a custom workflow to enhance productivity in After Effects.,MIT,CWL
trashmai,https://github.com/trashmai/workflow-meta-language,trashmai/workflow-meta-language,Using WFML (my own asm-like invention) to simplify and visualize data processing workflow with local functions or remote web services.,,CWL
dockstore,https://github.com/dockstore/silly-workflow-language-interface,dockstore/silly-workflow-language-interface,,Apache-2.0,CWL
NAL-i5K,https://github.com/NAL-i5K/CWL_Common-Workflow-Language,NAL-i5K/CWL_Common-Workflow-Language,A workflow to make organism onboarding pipeline easy to handle as an I/O pipeline,,CWL
linsalrob,https://github.com/linsalrob/CommonWorkflowLanguage,linsalrob/CommonWorkflowLanguage,CWL codes and examples for searchSRA.org,MIT,CWL
zippy,https://github.com/zippy/metaform,zippy/metaform,A domain specific language for creating complex forms with separate data  presentation and workflow abstractions  for rails apps.,MIT,CWL
sajadabedi,https://github.com/sajadabedi/Reverse-Text,sajadabedi/Reverse-Text,Fixing Figma RTL language problem with Alfred Workflow,,CWL
qkevinto,https://github.com/qkevinto/modular-email-workflow,qkevinto/modular-email-workflow,A simple modular email workflow built with gulp that also supports MailChimp's template styling language,MIT,CWL
tom-tan,https://github.com/tom-tan/cwl-inspector,tom-tan/cwl-inspector,This tool provides a handy way to inspect properties of tools or workflows written in Common Workflow Language,MIT,CWL
mpco,https://github.com/mpco/AlfredWorkflow-App-Language-Switcher,mpco/AlfredWorkflow-App-Language-Switcher,,,CWL
andrejsim,https://github.com/andrejsim/epos-cwl-workflows,andrejsim/epos-cwl-workflows,EPOS Common Workflow Language workflows,,CWL
rmapes,https://github.com/rmapes/SparkWorkflow,rmapes/SparkWorkflow,A parallel workflow language,,CWL
phyllisstein,https://github.com/phyllisstein/language-github-actions,phyllisstein/language-github-actions,Syntax highlighting for GitHub Actions workflow files.,NOASSERTION,CWL
rickadams2,https://github.com/rickadams2/WorkFlowStartPack,rickadams2/WorkFlowStartPack,Workflow for OOP languages ,,CWL
flslg,https://github.com/flslg/cawl,flslg/cawl,context aware workflow language,,CWL
surf-eds,https://github.com/surf-eds/cwl-examples,surf-eds/cwl-examples,Common Workflow Language examples,Apache-2.0,CWL
jefferys,https://github.com/jefferys/cwl,jefferys/cwl,Common workflow language support,NOASSERTION,CWL
bgm-cwg,https://github.com/bgm-cwg/Whole-Exome-Sequencing-Workflow,bgm-cwg/Whole-Exome-Sequencing-Workflow,WES workflow using WDL language,,CWL
halilozercan,https://github.com/halilozercan/coinami-workflow,halilozercan/coinami-workflow,Workflow description of Coinami in Common Workflow Language,,CWL
sumeet,https://github.com/sumeet/translation_workflows,sumeet/translation_workflows,OS X services I use for studying languages (Korean),,CWL
bgordon01,https://github.com/bgordon01/kul-workflow,bgordon01/kul-workflow,KUL ( Kwantu User Interface Language ) - workflow based polymer element,,CWL
jackric,https://github.com/jackric/agenda,jackric/agenda,Natural language workflow scheduling engine,,CWL
qwwqe,https://github.com/qwwqe/Fenciqi,qwwqe/Fenciqi,Streamline textual language study workflow.,,CWL
CancerCollaboratory,https://github.com/CancerCollaboratory/dockstore-tool-linux-sort,CancerCollaboratory/dockstore-tool-linux-sort,From https://github.com/common-workflow-language/workflows,,CWL
CancerCollaboratory,https://github.com/CancerCollaboratory/dockstore-tool-samtools-rmdup,CancerCollaboratory/dockstore-tool-samtools-rmdup,Adapted from https://github.com/common-workflow-language/workflows,,CWL
benhg,https://github.com/benhg/cwl-to-parsl,benhg/cwl-to-parsl,Code to translate Common Workflow Language YAML to Parsl workflows,,CWL
corticometrics,https://github.com/corticometrics/fs-cwl,corticometrics/fs-cwl,Common workflow language wrappers and workflow for FreeSurfer,,CWL
CancerCollaboratory,https://github.com/CancerCollaboratory/dockstore-tool-samtools-sort,CancerCollaboratory/dockstore-tool-samtools-sort, Adapted from https://github.com/common-workflow-language/workflows ,,CWL
CancerCollaboratory,https://github.com/CancerCollaboratory/dockstore-tool-samtools-index,CancerCollaboratory/dockstore-tool-samtools-index,From https://github.com/common-workflow-language/workflows,,CWL
CancerCollaboratory,https://github.com/CancerCollaboratory/dockstore-tool-bwa-samse,CancerCollaboratory/dockstore-tool-bwa-samse,From https://github.com/common-workflow-language/workflows,,CWL
CancerCollaboratory,https://github.com/CancerCollaboratory/dockstore-tool-bwa-mem,CancerCollaboratory/dockstore-tool-bwa-mem,From https://github.com/common-workflow-language/workflows,,CWL
liuweiathust,https://github.com/liuweiathust/cwl_taste,liuweiathust/cwl_taste,try to use CWL (common workflow language) to build workflows,,CWL
CancerCollaboratory,https://github.com/CancerCollaboratory/dockstore-tool-bwa-aln,CancerCollaboratory/dockstore-tool-bwa-aln,Adapted from https://github.com/common-workflow-language/workflows,,CWL
CancerCollaboratory,https://github.com/CancerCollaboratory/dockstore-tool-samtools-view,CancerCollaboratory/dockstore-tool-samtools-view, Adapted from https://github.com/common-workflow-language/workflows ,,CWL
CancerCollaboratory,https://github.com/CancerCollaboratory/dockstore-tool-liftover,CancerCollaboratory/dockstore-tool-liftover,From https://github.com/common-workflow-language/workflows,,CWL
CancerCollaboratory,https://github.com/CancerCollaboratory/dockstore-tool-bedtools-genomecov,CancerCollaboratory/dockstore-tool-bedtools-genomecov,From https://github.com/common-workflow-language/workflows,,CWL
Duke-GCB,https://github.com/Duke-GCB/MMAP-cwl,Duke-GCB/MMAP-cwl,Common Workflow Language tool and workflow definitions for MMAP pipeline,,CWL
CBICA,https://github.com/CBICA/CmdParser,CBICA/CmdParser,An easy to use Command Line Parser and Common Workflow Language (CWL) specification creater/reader,NOASSERTION,CWL
purecloudlabs,https://github.com/purecloudlabs/pseudoloc,purecloudlabs/pseudoloc,Generate pseudo-localized language strings in the normal course of your development workflow,Apache-2.0,CWL
4teamwork,https://github.com/4teamwork/ftw.lawgiver,4teamwork/ftw.lawgiver,Generate Plone workflows by simply describing them in a human readable language.,,CWL
vdaron,https://github.com/vdaron/StatesLanguage,vdaron/StatesLanguage,Helper classes to help creating and modifying workflow described using the Amazon States Language used by AWS StepFunctions,Apache-2.0,CWL
CompEpigen,https://github.com/CompEpigen/ATACseq_workflows,CompEpigen/ATACseq_workflows,Workflows for processing of ATAC-seq Data based on the Common Workflow Language (CWL),,CWL
mainulhossain,https://github.com/mainulhossain/phenowl,mainulhossain/phenowl,Phenotype Workflow Language: A Declarative Language for Phenotype Data Processing,MIT,CWL
Pascal-So,https://github.com/Pascal-So/StreamGraph,Pascal-So/StreamGraph,Designing a concept  language  interpreter  workflow  whatevs...,MIT,CWL
riordanp,https://github.com/riordanp/swbnlp,riordanp/swbnlp,simple workflow based natural language processing,,CWL
peicheng2005,https://github.com/peicheng2005/STAR-FUSION-CWL-Pipeline,peicheng2005/STAR-FUSION-CWL-Pipeline,STAR-FUSION Pipeline in common workflow language,,CWL
jpellman,https://github.com/jpellman/AFNI-CWL,jpellman/AFNI-CWL,AFNI commands wrapped in Common Workflow Language.,,CWL
NBISweden,https://github.com/NBISweden/Grapevine,NBISweden/Grapevine,A natural language based workflow management system,GPL-3.0,CWL
teamcgc,https://github.com/teamcgc/cgpbox-cwl,teamcgc/cgpbox-cwl,cgpbox pipeline adapted for common workflow language,,CWL
tobyhodges,https://github.com/tobyhodges/cwl-tutorial-files,tobyhodges/cwl-tutorial-files,Files for the Common Workflow Language tutorial,Apache-2.0,CWL
AleksandrSl,https://github.com/AleksandrSl/cwl-plugin,AleksandrSl/cwl-plugin,IntelliJ plugin for Common Workflow Language,MIT,CWL
tammojan,https://github.com/tammojan/dpppcwl,tammojan/dpppcwl,Trying the Common Workflow Language with DPPP,,CWL
yetinam,https://github.com/yetinam/cuneiform_tools,yetinam/cuneiform_tools,Tools for the scientific workflow language cuneiform.,,CWL
tarushgpb,https://github.com/tarushgpb/pb-workflow-engine,tarushgpb/pb-workflow-engine,workflow engine for elastic search with custom language support which is like SQL,,CWL
Mijathi,https://github.com/Mijathi/groovy-alfred-workflows,Mijathi/groovy-alfred-workflows,Collection of workflows for alfred app based on the groovy language. In short Galfred.,,CWL
mmulji,https://github.com/mmulji/insurance-sales-workflow,mmulji/insurance-sales-workflow,Code to model Insurance Sales Workflow in a number of different languages,,CWL
wojno,https://github.com/wojno/dot_workflow_example,wojno/dot_workflow_example,samples of using the DOT language to draw workflows and database tables,,CWL
NCIP,https://github.com/NCIP/cagrid-workflow,NCIP/cagrid-workflow,The caGrid-workflow repository contains the caGrid Workflow Service  which enables orchestration across caGrid services using Taverna's SCUFL language.,NOASSERTION,CWL
CompEpigen,https://github.com/CompEpigen/ChIPseq_workflows,CompEpigen/ChIPseq_workflows,Workflows for processing of ChIP-seq  ChIPmentation  and Cut&Run data based on the Common Workflow Language,,CWL
jevasQ,https://github.com/jevasQ/internship-project,jevasQ/internship-project,Conversion of the SNP-DISCOVERY-PIPELINE tools and codes into COMMON WORKFLOW LANGUAGE. ,,CWL
tranki1,https://github.com/tranki1/workflows,tranki1/workflows,Workflow with processed languages like Sass  Compass  and CoffeeScript; how to automate development and production versions of the sites  track and share project files with Git and GitHub  and add libraries like jQuery and Mustache.js with Browserify,,CWL
BeniamG,https://github.com/BeniamG/Computational_Text_Analysis_4session,BeniamG/Computational_Text_Analysis_4session,And introduction to CTA in four 2hr sessions designed to help beginners build intuition  and to interact with workflows for natural language processing  supervised  and unsupervised approaches.,,CWL
digitaldavenyc,https://github.com/digitaldavenyc/backbone.js-require.js-compass-sass-boilerplate,digitaldavenyc/backbone.js-require.js-compass-sass-boilerplate,Boilerplate template for Backbone.js  Require.js  Compass & SASS on front-end development. By combining these frameworks it creates a workflow similar to ActionScript or other OO languages,,CWL
broadinstitute,https://github.com/broadinstitute/cwl-proto,broadinstitute/cwl-proto,Reading and writing Common Workflow Language to Protocol Buffers.  I.e. CWL <-> Protobuf,BSD-3-Clause,CWL
kdmurray91,https://github.com/kdmurray91/usc-demo,kdmurray91/usc-demo,Demo of the userspace containers project at the Common Workflow Language,NOASSERTION,CWL
Alveo,https://github.com/Alveo/alveo-galaxy-tools,Alveo/alveo-galaxy-tools,Tools for handling language data and interfacing to Alveo on the Galaxy Workflow Platform,,CWL
BioJulia,https://github.com/BioJulia/CWL.jl,BioJulia/CWL.jl,Utilities for working with the Common Workflow Language (CWL) from Julia,MIT,CWL
TeamShakti,https://github.com/TeamShakti/jumpstart-workflows-8.14.0_hindi_language_enabled_catchup_publish_2,TeamShakti/jumpstart-workflows-8.14.0_hindi_language_enabled_catchup_publish_2,,,CWL
pvanheus,https://github.com/pvanheus/cwltutorial,pvanheus/cwltutorial,Examples to help in a Common Workflow Language tutorial,MIT,CWL
kaspar128,https://github.com/kaspar128/TVPaint,kaspar128/TVPaint,TVPaint-scripts(GEORGE-language) that helped me with my workflow,,CWL
nebula-projects,https://github.com/nebula-projects/enchanter,nebula-projects/enchanter,Lightweight workflow service based on state machine language.,Apache-2.0,CWL
advantis,https://github.com/advantis/AlfredAddEvent,advantis/AlfredAddEvent,Alfred 2 workflow for creating calendar events using natural language,,CWL
Selonka,https://github.com/Selonka/wdl_nanorc,Selonka/wdl_nanorc,Syntax highlighting for WDL a workflow definition language,,CWL
benkamphaus,https://github.com/benkamphaus/rs-polyglot,benkamphaus/rs-polyglot,Remote sensing algorithms and workflows in multiple languages.,,CWL
simonsfoundation,https://github.com/simonsfoundation/bioinfo_pipelines_cwl,simonsfoundation/bioinfo_pipelines_cwl,Bioinformatics pipelines using Common Workflow Language and Docker.,MIT,CWL
aaronmck,https://github.com/aaronmck/CWL,aaronmck/CWL,a place to aggregate common workflow language pipelines and tooling,Apache-2.0,CWL
chop-dbhi,https://github.com/chop-dbhi/style-guides,chop-dbhi/style-guides,Style guides and workflows for various languages and tools,,CWL
Parsoa,https://github.com/Parsoa/Beatrice,Parsoa/Beatrice,Pipeline Assembler For The Common Workflow Language (CWL),,CWL
siuyin,https://github.com/siuyin/wdot,siuyin/wdot,Workflow diagramming tool using ruby and graphviz dot language.,,CWL
boonetan,https://github.com/boonetan/jflow,boonetan/jflow,jflow is a java programming language  application  based activiti workflow...,,CWL
tom-tan,https://github.com/tom-tan/flycheck-cwl,tom-tan/flycheck-cwl,Add on-the-fly checker for Common Workflow Language,Unlicense,CWL
jeremyneedle,https://github.com/jeremyneedle/pseudowords,jeremyneedle/pseudowords,Sharing workflows for building and applying phonotactic ngram language models.,,CWL
mathsaey,https://github.com/mathsaey/skitter,mathsaey/skitter,A Domain Specific Language for Distributed  Reactive Workflows,MPL-2.0,CWL
djhshih,https://github.com/djhshih/wdl-canales,djhshih/wdl-canales,Bioinformatic pipelines written in the Workflow Description Language,GPL-3.0,CWL
amalter,https://github.com/amalter/mjml-email-templates,amalter/mjml-email-templates,Repository for testing the mjml email templating language and workflow,,CWL
probablytom,https://github.com/probablytom/variflow,probablytom/variflow,A language for defining sociotechnical workflows with variance,MIT,CWL
PMCC-BioinformaticsCore,https://github.com/PMCC-BioinformaticsCore/shepherd,PMCC-BioinformaticsCore/shepherd,A language and engine agnostic workflow runner wrapper,,CWL
kblin,https://github.com/kblin/cwl-antismash,kblin/cwl-antismash,First try wrapping antiSMASH in a Common Workflow Language description,CC-BY-4.0,CWL
cidles,https://github.com/cidles/poio-api,cidles/poio-api,Poio API is a free and open source Python library to access and search data from language documentation in your linguistic analysis workflow. It converts file formats like Elan‚Äôs EAF  Toolbox files  Typecraft XML and others into annotation graphs as defined in ISO 24612. Those graphs  for which we use an implementation called ‚ÄúGraph Annotation Framework‚Äù (GrAF)  allow unified access to linguistic data from a wide range sources.,Apache-2.0,CWL
guixwl,https://github.com/guixwl/gwl-starter,guixwl/gwl-starter,A repository serving as a template to get started with writing workflows with the Guix Workflow Language.,GPL-3.0,CWL
Qordobacode,https://github.com/Qordobacode/nodejs-sdk,Qordobacode/nodejs-sdk,nodejs-sdk example ,NOASSERTION,CWL
andfaulkner,https://github.com/andfaulkner/sublime-dev-environment-snippets,andfaulkner/sublime-dev-environment-snippets,Miscellaneous snippets defined throughout time developing NodeJS  Ruby on Rails  ReactJS  Clojure apps - workflow improvements. Backup repository for local abstractions to speed up development. Guides for learning various languages and concepts.,,CWL
NETWAYS,https://github.com/NETWAYS/rt-extension-createlinkedtickets,NETWAYS/rt-extension-createlinkedtickets,Create linked tickets based on RT template language,,CWL
alfonsoirai,https://github.com/alfonsoirai/go-tour,alfonsoirai/go-tour,This repository will be to have a workflow of the Go Programming Language for the Programming Language Course,MIT,CWL
FabienneL,https://github.com/FabienneL/BioNet-Mining,FabienneL/BioNet-Mining,The biological network mining workflow identifies frequent structural patterns in biochemical reaction networks encoded in the Systems Biology Markup Language (SBML),,CWL
SitecoreSupport,https://github.com/SitecoreSupport/Sitecore.Support.107642,SitecoreSupport/Sitecore.Support.107642,Language fallback creates unnecessary language versions using Copy to and Duplicate options for items not in the initial workflow state.,NOASSERTION,CWL
cfeduke,https://github.com/cfeduke/alfred-dev-doctor-javadoc,cfeduke/alfred-dev-doctor-javadoc,Generates data.language.json files for Alfred v2 Dev Doctor workflow from HTML Javadocs.,,CWL
erohkohl,https://github.com/erohkohl/haskell-tdd,erohkohl/haskell-tdd,Project shows my default workflow for test driven development in the functional programming language Haskell.,,CWL
naturalis,https://github.com/naturalis/cwl-master-project,naturalis/cwl-master-project,Source code in Common Workflow Language for sharing pipelines between Rijk Zwaan and Naturalis,,CWL
kundajelab,https://github.com/kundajelab/chipseq_pipeline2,kundajelab/chipseq_pipeline2,TF/Histone ChIP-Seq pipeline2 based on WDL (workflow definition language),MIT,CWL
leereilly,https://github.com/leereilly/translation-services,leereilly/translation-services,A workflow for translating copy from one language to another using professional services,,CWL
kb634,https://github.com/kb634/crossminer,kb634/crossminer,Domain-specific language and execution engine for running workflows for repository mining ,,CWL
kzhang098,https://github.com/kzhang098/WIPS,kzhang098/WIPS,A Workflow Language Interpreter and System developed using Java and JavaFX,,CWL
AmericanRedCross,https://github.com/AmericanRedCross/sphinx-transifex,AmericanRedCross/sphinx-transifex,testing a workflow for multi-language documentation using sphinx and transifex,GPL-3.0,CWL
mrjones2014,https://github.com/mrjones2014/alfred-youtrack-query,mrjones2014/alfred-youtrack-query,An Alfred Workflow to query a YouTrack server with YouTrack Query Language auto-complete,MIT,CWL
NuclearCookie,https://github.com/NuclearCookie/HelloWorldGO,NuclearCookie/HelloWorldGO,First go code to get to know the language and workflow,,CWL
alvinuseree,https://github.com/alvinuseree/Collibra-V2-API-Functions,alvinuseree/Collibra-V2-API-Functions,These functions use the Collibra version 2 APIs and the Groovy language to execute workflow tasks,,CWL
kaplejon,https://github.com/kaplejon/my_little_git,kaplejon/my_little_git,A git repo for learning git workflow and the Ruby programming language,,CWL
horizongir,https://github.com/horizongir/bonsai.examples,horizongir/bonsai.examples,A collection of example workflows and applications created with the Bonsai visual programming language.,MIT,CWL
ssteinbach,https://github.com/ssteinbach/MakeRSL,ssteinbach/MakeRSL,Some tools for a make-based Renderman Shader Language development workflow.,,CWL
alexwaldrop,https://github.com/alexwaldrop/GAP,alexwaldrop/GAP,Workflow language and executor designed to streamline design  execution of bioinformatic pipelines in a cloud environment.,,CWL
joelea,https://github.com/joelea/flexible-browserify-generator,joelea/flexible-browserify-generator,Yeoman generator for a gulp/browserify workflow for js-based language projects,Apache-2.0,CWL
z-jack,https://github.com/z-jack/work-the-flow,z-jack/work-the-flow,WorkTheFlow(WTF) is a programming language that can be compiled to iOS Workflow file(.wflow).,MIT,CWL
atttune,https://github.com/atttune/gittodo,atttune/gittodo,gittodo is a to list with embeded git workflow and a simple language for tagging tasks,,CWL
manuelesimi,https://github.com/manuelesimi/NextflowWorkbench,manuelesimi/NextflowWorkbench,The Nextflow Workbench is a set of languages developed with the Jetbrains MPS Language Workbench that make it easier to write data analysis workflows with Nextflow.,NOASSERTION,CWL
stevetsa,https://github.com/stevetsa/Metaphlan-WDL,stevetsa/Metaphlan-WDL,This is a repository for Workflow Description Language (WDL) files  which are used to run analysis on the FireCloud.,,CWL
common-workflow-language,https://github.com/common-workflow-language/cwlprov-py,common-workflow-language/cwlprov-py,cwlprov: Command line tool and Python API to explore Research Objects containing provenance of Common Workflow Language executions,Apache-2.0,CWL
SitecoreSupport,https://github.com/SitecoreSupport/Sitecore.Support.301212,SitecoreSupport/Sitecore.Support.301212,SXA Page's datasource item not moved to next workflow state along with Page due to no language check,NOASSERTION,CWL
ShubhamGulia,https://github.com/ShubhamGulia/KKBox_s-Churn-Prediction-Challenge,ShubhamGulia/KKBox_s-Churn-Prediction-Challenge,This project is Kaggle Project(Kaggle.com). This project is scripted in R language. Use R Studio for smoother workflow. ,,CWL
standard-release,https://github.com/standard-release/standard-release,standard-release/standard-release,Automated workflow for language-independent module publishing and creating GitHub Releases  following the Conventional Commits and SemVer specifications,Apache-2.0,CWL
noah,https://github.com/noah/tickler-mail,noah/tickler-mail,Tickler file (boomerang) email workflow with natural language reminders - for users of Mutt and other command-line MUAs.,GPL-2.0,CWL
charlVSchoor,https://github.com/charlVSchoor/myFunctions,charlVSchoor/myFunctions,This repo contains functions in multiple programming languages  of which the aim is to create ease of workflow packages,,CWL
FelixKlauke,https://github.com/FelixKlauke/perimeta,FelixKlauke/perimeta,Ergonomic and extensive slug language support plugin for the intellij platform bringing the essence of good programming on enterprise level by maintaining a fluent and innovative workflow in a savory environment.,MIT,CWL
SRI-CSL,https://github.com/SRI-CSL/ETB2,SRI-CSL/ETB2,ETB2 is a complete reengineering of the Evidential Tool Bus (ETB) using Java.  ETB2 is a platform for defining and executing distributed workflows that produce claims supported by evidence.  ETB uses Datalog as the workflow scripting language.,GPL-3.0,CWL
JacopoV,https://github.com/JacopoV/TypingGame,JacopoV/TypingGame,Typing game made for iOS platform. Written in less that one week to understand and lean Objective C language and iOS programming workflow.,,CWL
SFurnace,https://github.com/SFurnace/Chez-Scheme-Document-Helper,SFurnace/Chez-Scheme-Document-Helper,This is a Alfred workflow which is used to search doc in Chez Scheme User Manual and The Scheme Programming Language 4th Edition.,Apache-2.0,CWL
Thomas-A-Reinert,https://github.com/Thomas-A-Reinert/WebDev-Icons,Thomas-A-Reinert/WebDev-Icons,A font to iconify a webdevelopers skills currently including 124 plain  monochrome icons in Version 1.0. Including programming languages  workflow tools  programs etc.,GPL-2.0,CWL
retgits,https://github.com/retgits/copy-syntax-highlight-alfred,retgits/copy-syntax-highlight-alfred,Copy Syntax Highlight for Alfred is an Alfred workflow which properly highlights the copied text  based on the given language  and copies the result to the clipboard,MIT,CWL
benkamphaus,https://github.com/benkamphaus/remote-sensing-notebooks,benkamphaus/remote-sensing-notebooks,Analysis workflows in a variety of languages for Earth and Planetary Remote Sensing. Warning: I only have real expertise in the former.,EPL-1.0,CWL
EmanoelLopes,https://github.com/EmanoelLopes/daily-log,EmanoelLopes/daily-log,:notebook: My diary log (not so diary... :/) about learning some useful stuff  new tools  languages  workflow  or even nonsense in general. :),,CWL
waynean,https://github.com/waynean/beam,waynean/beam,Open source  unified model and set of language-specific SDKs for defining and executing data processing workflows  and also data ingestion and integration flows,Apache-2.0,CWL
JakobSteixner,https://github.com/JakobSteixner/DemoSLEI_Steixner,JakobSteixner/DemoSLEI_Steixner,GUI interface and forward to rendering software for Sign Language Experts checking/improving machine translated text in a text-to-sign workflow,,CWL
marcoslimagon,https://github.com/marcoslimagon/mawor,marcoslimagon/mawor,Simplest machine workflow mechanism for both .net  java and other languages. The target is to provide only the main interfaces making easy to adapt for many scenarios,MIT,CWL
inshopgroup,https://github.com/inshopgroup/inshop-crm-api,inshopgroup/inshop-crm-api,Inshop CRM / ERP API. It's powerful framework allows to build systems for business with different workflows. It has on board multi language support  clients management  projects & tasks  documents  simple accounting  inventory management  orders & invoice management  possibilities to integrate with third party software  REST API  and many other features.,MIT,CWL
edhowland,https://github.com/edhowland/spec_wire,edhowland/spec_wire,A wire protocol for RSSpec. This  is really an object message passing protocol over HTTP using REST and JSON for parameter encoding. The goal is to maintain a normal workflow of test/fail/code/pass/refactor/pass or Red-Green-Refactor using Cucumber and RSpec and writing the code in your target language. ,MIT,CWL
inshopgroup,https://github.com/inshopgroup/inshop-crm-ecommerce,inshopgroup/inshop-crm-ecommerce,Inshop CRM / ERP ecommerce. It's powerful framework allows to build systems for business with different workflows. It has on board multi language support  clients management  projects & tasks  documents  simple accounting  inventory management  orders & invoice management  possibilities to integrate with third party software  REST API  and many other features.,MIT,CWL
inshopgroup,https://github.com/inshopgroup/inshop-crm-client,inshopgroup/inshop-crm-client,Inshop CRM / ERP Client. It's powerful framework allows to build systems for business with different workflows. It has on board multi language support  clients management  projects & tasks  documents  simple accounting  inventory management  orders & invoice management  possibilities to integrate with third party software  REST API  and many other features.,MIT,CWL
aonurdemir,https://github.com/aonurdemir/Mephisto,aonurdemir/Mephisto,Mephisto is a transpiler for converting sound patches designed using the graphical computer music environment Pure Data to the functional DSP programming language Faust. Faust itself compiles into highly-optimized C++ code. The aim of the transpiler is to enable creating highly optimized C++ code embeddable in games or other interactive media for sound designers  musicians and sound engineers using PureData in their workflows and to reduce the prototype-to-product delay.,,CWL
anirudhmurali,https://github.com/anirudhmurali/hello-julia-genie,anirudhmurali/hello-julia-genie,Julia is a high-level  high-performance dynamic programming language for numerical computing. This quickstart uses Genie framework  which's is a full-stack MVC web framework that promotes a streamlined and efficient workflow for developing modern web applications.,MIT,CWL
krishr2d2,https://github.com/krishr2d2/cd_mini_project,krishr2d2/cd_mini_project,A mini visualization language that uses figures like rectangles and lines to show the workflow of algorithms(intended for sorting) written using python. The project uses python's PLY module.,,CWL
hopelessoptimism,https://github.com/hopelessoptimism/Currywurst,hopelessoptimism/Currywurst,A Hadoop MapReduce DSL written in Javascript that mimicks the native functional features of the language to provide an intuitive and instructive abstraction layer to write MapReduce workflows in.,,CWL
CAST-Extend,https://github.com/CAST-Extend/XPDL-Extension-Description-Page,CAST-Extend/XPDL-Extension-Description-Page,The¬†Extension should be used in the following situations: AI Admins who need to analyze applications which use¬†XPDL Files. The¬†XML¬†Process Definition Language¬†(XPDL) is¬†a¬†format standardized by the¬†Workflow Management Coalition¬†(WfMC) to interchange¬†business process¬†definitions between different¬†workflow¬†products  i.e. between different modeling tools and management suites. XPDL defines an XML schema for specifying the declarative part of workflow / business process.. If your application contains¬†XPDL¬†source code¬† and you want to view these object types and their links with other objects  then you should install this extension.,,CWL
MattAllen92,https://github.com/MattAllen92/Data-Science-Basics,MattAllen92/Data-Science-Basics,A repository where I can store my data science material  I aim to populate it with Jupyter Notebook files  scripts and documents describing the core workflow and methods required for a sound understanding of the key data science principles in Python (and snippets from other languages).,,CWL
moosichu,https://github.com/moosichu/continuous-integration-workshop,moosichu/continuous-integration-workshop,This repository contains the learning materials for the workshop on how to create a continuous integration workflow. The skills being taught apply to a variety of languages  tools and setups. But Gradle  Java  Git and Travis CI form the foundation of this workshop.,MIT,CWL
DavidCChi,https://github.com/DavidCChi/Student-Database,DavidCChi/Student-Database,This program was created for the International Languages Program that I volunteered at in the past. The goal was to develop a stable and working database program in order to upgrade the current system of using physical copies of information. Digitalizing the database greatly improved the workflow and efficiency within the school.,,CWL
Charles-Froment,https://github.com/Charles-Froment/OrangeColorApp,Charles-Froment/OrangeColorApp,A small application for mac os It is a color palette which provides with quick access to Orange colors sets. To use with your favorite graphic software. It reduces your time spent on the guideline website. This application allowed my team to improve their workflow. Process : from scratch  the project used fast prototyping  with multiple iterations. Programming language : Python 3,MIT,CWL
DSCfuo,https://github.com/DSCfuo/fuocribs,DSCfuo/fuocribs,FUOcribs is an open source web project aimed at helping university students find roommates and available accomodation. The overall idea behind this program is to help develop coding and real-world problem-solving skills. This project is beginner friendly because no framework would be used and would be built from scratch so we encourage every contributor to give this rpoject their best shot and also __write down good comments in your codes to help another person reading your code learn and understand fast.__  ## Languages required * HTML5 * CSS3 * JAVASCRIPT * PHP * MYSQL  ## Tools needed * Web browser * Text editor    * You can use any text editor of your choice. Recommended text editors: [Atom](https://atom.io)  [Brackets](https://brackets.io)  [Vscode](https://code.visualstudio.com/download) * Offline server ([xampp](https://www.apachefriends.org/download.html) or [wamp](http://www.wampserver.com/en/))  ## Workflow This section describes the workflow we are going to follow when working in a new feature or fixing a bug. If you want to contribute  please follow these steps:  #### Fork this project Clone the forked project to your local environment  for example: ```git clone https://github.com/DSCfuo/fuocribs.git ``` (Make sure to replace the URL to your own repository). Add the original project as a remote  for this example the name is upstream  feel free to use whatever name you want. git remote add upstream ```https://github.com/DSCfuo/fuocribs.git ``` Forking the project will create a copy of that project in your own GitHub account  you will commit your work against your own repository.  #### Updating your local In order to update your local environment to the latest version on master  you will have to pull the changes using the upstream repository  for example: git pull upstream master. This will pull all the new commits from the origin repository to your local environment.  #### Features/Bugs When working on a new feature  create a new branch feature/something from the master branch  for example feature/login-form. Commit your work against this new branch and push everything to your forked project. Once everything is completed  you should create a pull request to the original project. Make sure to add a description about your work and a link to the trello task.  When fixing a bug  create a new branch fix/something from the master branch  for example fix/css-btn-issues. When completed  push your commits to your forked repository and create a pull request from there. Please make sure to describe what was the problem and how did you fix it.  #### Updating your local branch Let's say you've been working on a feature for a couple days  most likely there are new changes in master and your branch is behind. In order to update it to the latest (You might not need/want to do this) you need to pull the latest changes to develop and then rebase your current branch.  $ git checkout master $ git pull upstream master $ git checkout feature/something-awesome $ git rebase master After this  your commits will be on top of the master commits. From here you can push to your origin repository and create a pull request.  You might have some conflicts while rebasing  try to resolve the conflicts for each individual commit. Rebasing is intimidating at the beginning  if you need help don't be afraid to reach out in slack.  #### Pull requests In order to merge a pull request  there should be a couple of approval reviews. Once is approved  we should merge to the master branch using the Squash button in github.  When using squash  all the commits will be squashed into one. The idea is to merge features/fixes as oppose of merging each individual commit. This helps when looking back in time for changes in the code base  and if the pull request has a great comment  it's easier to know why that code was introduced.,,CWL
aume,https://github.com/aume/slideDeck.js,aume/slideDeck.js,Creating  disseminating  and maintaining lecture slides has long been the standard model of providing students with presentation cues and lecture notes. We describe a system called slideDeck.js that augments the standard model and generates online slide decks using a minimal markup language. Different slide types include bullet points  images  and interactive coding examples. With accessible GUI  mobile responsive design  customizable and interactive content  slideDeck.js provides an accessible learning platform for students to explore lecture material in a way that enhances their learning. slideDeck.js is designed to be flexible for instructors to update content  modify the look and feel of the presentation  and transfer the slide deck between col- leagues teaching the course. Following the ethos of separating presentation from content  slideDeck.js fits into the lecture design workflow automating the generation of presentation slides. Our aim is to make the work of creating dynamic lecture material more time efficient and accessible to instructors  and flexible for students.,,CWL
RizeTrainingsOnline,https://github.com/RizeTrainingsOnline/oracle-HCM-Training,RizeTrainingsOnline/oracle-HCM-Training,RizeTrainings is the Industry leader in Oracle HCM training which highlight on hands on experience with examples from real-time scenarios by experts.   The objective of this training is to provide hands on experience and in depth understanding of the following modules of Oracle HCM Online Training. 1 Course Overview Oracle Fusion Applications Overview Oracle Fusion HCM Overview Introducing Oracle Fusion HCM Cloud Service Introducing Oracle Fusion Applications User Interface Demonstrating Oracle Fusion Applications Help   2 HCM Cloud Service Overview Oracle Fusion HCM Cloud Service Patching and Upgrades Oracle Cloud Environment Management Functional Setup Manager (FSM) Oracle Cloud Backup Policies Oracle Cloud Disaster Recovery Objectives Know How to Work with Oracle SaaS     3 Enterprise Structures: Initial Configuration & Maintenance Enterprise Structures Overview Designing Enterprise Configuration Enterprise Structures Configurator Reference Data Sharing Jobs and Positions Contextual Attributes for Jobs and Positions at different levels 4 Workforce Structures Manage Enterprise HCM Information Task Employment Models Work Day Information Number Generation Person- Name Languages Enterprise-Level User and Role-Provisioning Options Defining Locations Defining HCM Organizations Actions and Action Reasons 5 Define Legal Entities for HCM Legal Entity Role Legal Entity Considerations Legal Entity and its Relationship to Divisions Legal Reporting Units Overview Legislative Data Groups   6 Define Grades Grades Setup and Maintenance Defining Grades Defining Grade Rates Defining Grade Ladders 7 Define Jobs Jobs Setup and Maintenance Lookups for Jobs Grades Job Families   8 Define Positions Positions Setup and Maintenance Lookups for Positions Positions Examples in different industries 9 Manage Workforce Lifecycle Add Person Manage Employment Information Areas of Responsibility Employment Processes Mass Updates Employee and Manager Self Service   10 Maintain Worker Directories Person Gallery and Portrait Person Search Line Manager Self-Service Worker Self-Service Portrait Cards Simplified User Experience Managing Gallery Portrait   11 Define Workforce Records Defining Availability Defining Person Record Values Defining Employment Record Values Defining Documents   12 Workflow  Approvals  and Notifications (Overview) Workflow Approval Policies Approver Types Manage Approval Groups for Human Capital Management Approval Structure Oracle BPM Worklist Approval Rules   13 Extend and Personalize HCM (Overview) Sandbox Manager Customizations Flexfield Concepts   14 HCM Security Overview (Overview) Role-Based Security Model Role Inheritance Security Profiles and Data Roles User and Role Provisioning   15 Business Intelligence and Ad Hoc Reporting (Overview) Oracle Fusion Reporting Tools for Oracle HCM Cloud Service Comparison of Reporting Tools Overview of OTBI and BI Publisher   Contact US  For Free Demo: Call: +91- 970 39767 53 Email: contact@rizetrainings.com Website: www.rizetrainings.com url: http://www.rizetrainings.com/oracle-fusion-hcm-online-training.html,,CWL
vincitmedia,https://github.com/vincitmedia/These-Top-5-Web-Development-Tools,vincitmedia/These-Top-5-Web-Development-Tools,The best and most things about being a web developer is that the web is continually showing changes. While this is exciting it also means that web designers should dependably be proactive about adapting new methodology or programming languages  adjusting to changes  and be willing and excited to recognize new troubles. This could include tasks such as changing existing structures to meet business requirements  testing a site to recognize technical issues  or improving and scaling a website to better perform with the back-end foundation. We thought we would gather a comprehensive list of web development tools that can help you be more beneficial  stay educated  and become a better developer.  List of Web development Tools are as below:  A considerable measure of these web development tools below are ones we use at KeyCDN once every day. We can‚Äôt include everything  except here are a few our top picks and other generally utilized ones.  Hopefully  you find a new tool that will help you in your development workflow.  Note: ‚Äì The tools below are listed in a particular order.  JavaScript Libraries  JavaScript is a champion amongst the most popular programming languages on the web.  A JavaScript library is a library of pre-shaped java script which allows easier access throughout the improvement of your site or application. For Ex  You can incorporate a duplicate of Google‚Äôs hosted jquery library by using the going with piece.  Jquery: A quick  little  and feature-rich JavaScript library.  Backbonejs: Give your JS application some backbone with models  sees  collections  and events.  D3Js: A JavaScript library for manipulating reports in view of Data.  React: Facebook‚Äôs JavaScript library produced for building customer interfaces.reports in context of data  Jquery UI: A curated set of UI interactions  impacts  gadgets  and themes.  Jquery Mobile: HTML5-based user interface system planned to make responsive web sites.  Underscore.js: Functional programming associates without developing any built-in objects.  Moment.js: Parse  acknowledge  manipulate  and show dates in JavaScript.  Lodash: A modern utility library conveying measured quality  execution  and additional items.  Front-end framework:  Front-end frameworks usually contain a group that is made up of different files and folders for example  HTML  CSS and JavaScript etc. There are also many stand-alone systems out there. We are a big fan of Bootstrap and the principle KeyCDN website depends on it. A solid framework can be fundamental device front-end developers.  Bootstrap: HTML  JS  and CSS framework for developing responsive convenient first ventures on the web.  Foundation: Gathering of responsive front-end frameworks that make it simple to design beautiful responsive sites  applications and messages that look amazing on any device.  Semantic UI: Development framework that makes excellent  responsive designs  using human-friendly HTML.  Uikit: A lightweight and specific front-end framework for developing quick and powerful web interfaces.  Web Application Frameworks:  A web application framework is a product structure designed to help and relieve a bit of the headache required in the development of web applications and services. KeyCDN really has a form of AngularJS  HTTP/2 and CORS engaged  that you can use in your tasks totally free.  Ruby: Ruby on Rails is a web-application framework that incorporates everything expected to create database-supported web applications  with the MVC design.  AngularJS: Allows you to develop HTML vocabulary for your web application.  AngularJS is a framework  despite the fact that it‚Äôs extensively more lightweight and sometimes implied as a library.  Ember.js: A framework for making ambitious web application.  ASP.net: Free  completely supported Web application framework that helps you make standards-based Web arrangements.  Languages/ Platforms:  All the web development tools are a language. A programming language is a formal manufactured language designed to communicate with a computer and make programs in which you can control the behavior. Also  yes we understand some of these might not generally referred to as a languages or Platforms.  PHP  Nodejs  JavaScript  HTML5  Python  SQL  CSS3  Ruby.  Database:  A database is a collection of data that is stored so that it can be recovered  managed and updated.  MySQL  MariaDB  MangoDB  Redis  PostgreSQL.  Related Blog : How Can a Website Impact on Your Business?  Vincit Media provides end to end solutions that helps to grow your business through our Web development services. If you want to know more about our Web development services  mail us at info@vincitmedia.com or Contact us on: 020-65300143,,CWL
vincitmedia,https://github.com/vincitmedia/Check-Out-These-Top-5-Web-Development-Tools,vincitmedia/Check-Out-These-Top-5-Web-Development-Tools,The best and most things about being a web developer is that the web is continually showing changes. While this is exciting it also means that web designers should dependably be proactive about adapting new methodology or programming languages  adjusting to changes  and be willing and excited to recognize new troubles. This could include tasks such as changing existing structures to meet business requirements  testing a site to recognize technical issues  or improving and scaling a website to better perform with the back-end foundation. We thought we would gather a comprehensive list of web development tools that can help you be more beneficial  stay educated  and become a better developer.  List of Web development Tools are as below:  A considerable measure of these web development tools below are ones we use at KeyCDN once every day. We can‚Äôt include everything  except here are a few our top picks and other generally utilized ones.  Hopefully  you find a new tool that will help you in your development workflow.  Note: ‚Äì The tools below are listed in a particular order.  JavaScript Libraries  JavaScript is a champion amongst the most popular programming languages on the web.  A JavaScript library is a library of pre-shaped java script which allows easier access throughout the improvement of your site or application. For Ex  You can incorporate a duplicate of Google‚Äôs hosted jquery library by using the going with piece.  Jquery: A quick  little  and feature-rich JavaScript library.  Backbonejs: Give your JS application some backbone with models  sees  collections  and events.  D3Js: A JavaScript library for manipulating reports in view of Data.  React: Facebook‚Äôs JavaScript library produced for building customer interfaces.reports in context of data  Jquery UI: A curated set of UI interactions  impacts  gadgets  and themes.  Jquery Mobile: HTML5-based user interface system planned to make responsive web sites.  Underscore.js: Functional programming associates without developing any built-in objects.  Moment.js: Parse  acknowledge  manipulate  and show dates in JavaScript.  Lodash: A modern utility library conveying measured quality  execution  and additional items.  Front-end framework:  Front-end frameworks usually contain a group that is made up of different files and folders for example  HTML  CSS and JavaScript etc. There are also many stand-alone systems out there. We are a big fan of Bootstrap and the principle KeyCDN website depends on it. A solid framework can be fundamental device front-end developers.  Bootstrap: HTML  JS  and CSS framework for developing responsive convenient first ventures on the web.  Foundation: Gathering of responsive front-end frameworks that make it simple to design beautiful responsive sites  applications and messages that look amazing on any device.  Semantic UI: Development framework that makes excellent  responsive designs  using human-friendly HTML.  Uikit: A lightweight and specific front-end framework for developing quick and powerful web interfaces.  Web Application Frameworks:  A web application framework is a product structure designed to help and relieve a bit of the headache required in the development of web applications and services. KeyCDN really has a form of AngularJS  HTTP/2 and CORS engaged  that you can use in your tasks totally free.  Ruby: Ruby on Rails is a web-application framework that incorporates everything expected to create database-supported web applications  with the MVC design.  AngularJS: Allows you to develop HTML vocabulary for your web application.  AngularJS is a framework  despite the fact that it‚Äôs extensively more lightweight and sometimes implied as a library.  Ember.js: A framework for making ambitious web application.  ASP.net: Free  completely supported Web application framework that helps you make standards-based Web arrangements.  Languages/ Platforms:  All the web development tools are a language. A programming language is a formal manufactured language designed to communicate with a computer and make programs in which you can control the behavior. Also  yes we understand some of these might not generally referred to as a languages or Platforms.  PHP  Nodejs  JavaScript  HTML5  Python  SQL  CSS3  Ruby.  Database:  A database is a collection of data that is stored so that it can be recovered  managed and updated.  MySQL  MariaDB  MangoDB  Redis  PostgreSQL.  Related Blog : How Can a Website Impact on Your Business?  Vincit Media provides end to end solutions that helps to grow your business through our Web development services. If you want to know more about our Web development services  mail us at info@vincitmedia.com or Contact us on: 020-65300143,,CWL
Inn4ki,https://github.com/Inn4ki/chatapp,Inn4ki/chatapp,NODE.JS WEB APPS WITH EXPRESS by Wes Higbee  In this Node.js Web Apps with Express training course  expert author Wes Higbee will teach you how to create web applications and APIs with Express. This course is designed for users that are already familiar with HTML  CSS  and JavaScript.  You will start by learning how to set up a web app  then jump into learning about the Jade view engine. From there  Wes will teach you about CRUD  including how to add the chat room view  respond with JSON  and edit chat rooms. This video tutorial also covers routers  middleware  APIs  and logging and debugging. Finally  you will learn about auth with passport  including passport user validation  protecting admin routes  and query string parameters.  Once you have completed this computer based training course  you will have learned how to create web applications and APIs with Express. Working files are included  allowing you to follow along with the author throughout the lessons.  About the Publisher  Presented in stunning HD quality  the Infinite Skills range of video based training provides a clear and concise way to learn computer applications and programming languages at your own speed. Delivered to your Desktop  iPad ...  More about Infinite Skills Table of Contents Setting Up A Web App What You Will Learn 00:03:28 About The Author 00:01:23 Project Setup 00:02:14 Spinning Up Our Server From Scratch 00:05:11 Serving Index.HTML 00:04:32 Serving Bootstrap Assets 00:05:52 Styling Our Site 00:01:16 How To Access Your Working Files 00:01:15 The Jade View Engine Why View Engines? 00:02:10 The Jade View Engine 00:06:32 HTML Tags In Jade 00:02:16 Attributes Classes And Ids In Jade 00:02:06 Serving Up Jade Views 00:04:24 HTML Reuse In Jade 00:06:26 Code In Jade Views 00:02:37 Passing Data To View Rendering 00:02:01 Setting A Default View Engine 00:00:37 String Interpolation In Jade 00:02:30 Generating Tables In Jade 00:03:50 Tabs And Spaces Oh My 00:01:21 Demystifying Jade 00:02:21 Crud Setting The Stage 00:01:01 Add Chat Room View 00:04:21 Post Chat Room Form 00:06:56 Parsing Form Data From The Request Body 00:04:22 Responding With JSON 00:03:20 Admin Chat Rooms Workflow 00:02:21 Named Route Parameters To Delete Rooms 00:05:59 Edit Chat Rooms 00:06:01 Edit Chat Rooms Part - 2 00:02:00 Responding With 404 Not Found 00:01:39 Wrap Up 00:01:23 Routers Extracting An Admin Module 00:04:47 Modular Admin Router 00:04:00 Pluggable Admin Mount Path 00:03:15 Stumbling Block - Relative Redirects 00:02:49 Chaining Routes 00:01:57 Middleware Understanding Routing And Middleware 00:05:45 Adding Custom Logging Middleware 00:02:15 Understanding Next() 00:01:31 Middleware To Fetch Data 00:07:24 Order Matters.Av 00:01:09 Scoping Middleware 00:03:53 What To Do With Errors 00:03:01 Last Thoughts 00:03:19 APIs A Client Side Chat App 00:01:55 Setup The Client Side Chat App 00:03:01 Creating An API 00:05:42 Modules Are Singletons 00:01:50 Postman To Test API 00:01:24 API Get Room Messages 00:05:49 Posting To An API 00:03:37 API To Delete Messages 00:03:15 Parsing JSON In The Request Body 00:03:25 Logging And Debugging Express-Debug 00:03:03 Logging With Morgan 00:01:45 File Access Log With Morgan 00:01:28 Built-In Express Debugging 00:01:57 When Things Go Wrong Throwing An Error In A Route Handler 00:01:39 Errors In Production 00:01:53 Custom Error Handlers 00:02:40 Browser Hangs 00:00:58 Hanging Async Request Handlers 00:01:17 Errors In Callbacks 00:03:32 Don't Swallow Callback Errors 00:02:46 Auth With Passport Auth With Passport 00:01:49 Login Form 00:06:31 Passport User Validation 00:05:20 Passport Session Serialization 00:01:49 Logging In 00:06:23 Logout 00:03:52 Authorizing Access To Block Anonymous Users 00:03:40 Protecting Admin Routes 00:02:04 Using User Information 00:02:48 Bypassing Login In Development 00:03:11 Query String Parameters 00:02:34 Auth Cookies 00:02:17 Last Thoughts 00:05:45  Publisher: Infinite Skills Release Date: March 2016 ISBN: 9781491958933 Running time: 4:09:49 Topic: Node.js,NOASSERTION,CWL
First-iOS-Steps,https://github.com/First-iOS-Steps/TiranaTransit,First-iOS-Steps/TiranaTransit,Tirana transit is a real time  journey planning application for the iOS platform. It is focused precisely on the public transport operating in Tirana. Using the GPS technology and the integrated map features users can see their current location and all the station around them. The location of the stations will be registered by me and it is achieved by providing the coordinates.   Users will be able to get the schedule for specific stations of a line  get the next stops in real time. The app sends notifications for their departures and users can see the connections that the current station offers with different lines. You can see all the stations of a line in the map as well. This will be implemented by using the drawing methods the swift languages provide.  Moreover  there are alerts in case of traffic disruptions. The alert will be line specific and it will pop up as a notification in the users screen.   A full network map image will be provided in order for users to see for themselves the connections and routes.  Users will be able to login and buy their tickets via the app which will avoid having a line of people waiting to buy a ticket from the driver. The ticket implementation will be done via Stripe an online service. The workflow is as follows:    Collecting credit card information from your customer Converting the credit card information to a single-use token Sending this token to your server to create a charge.  The login will be implemented by using parse in order to save the user data. Parse offers an online database storage and it is efficient for projects of this size. A chat may be provided to contact the support for any issues.   There are two courses that I am mainly interested in apart from software engineering. These are namely database and information systems  network security. Both offered in the masters program. I need the database for the user information as I already mention and the system has to be secure when it comes to making payments. I believe they are an integral part when it comes to designing software because you want your product to be as much reliable and efficient as possible. This would allow me to improve my application.,,CWL
subastian-tech,https://github.com/subastian-tech/Top-JavaScript-Frontend-Package-Managers,subastian-tech/Top-JavaScript-Frontend-Package-Managers, As the technology and commanding languages are improving their package handles are also improving themselves. In the market at present  many package managers are wondering few are good for the work. It is hard when we find people are confused and feeling frustrated while selecting package manager. So we have decided to let‚Äôs make some talk about these. There are so many of these managers. But here we will be listing 5 package managers those you can use while doing front end development.  1. NPM  This one is taken as Node Package Manager and even called the same. But if that so what is the meaning of listing it here. It is also manager of world‚Äôs largest software registry. You can manage public and private code with the same workflow. It holds the largest collection of free and reusable codes. It can be used for frontend web apps  mobile apps  robots and routers. Usage Package: Free  $7 per user/ month  $16 per user/month.  2. Yarn  This package was first initiated by the Facebook and is supported by the Google. It uses caching mode to make fast and quick development. It downloads every code as a cache so you don‚Äôt need to download it again and again. Its server use queues up request so that it can handle the bulk of request. It keeps checking packages after every installation to avoid corrupt packages.  3. Bower  It share a great reputation on GitHub and have highest stars than any other package managers. But don‚Äôt get blinded by its starts only. It surely is very useful and that‚Äôs why it earned the respect. When Bower first created  NPM was already present in the market. So what was the need of making of Bower? NPM only handle node.js and do not include a browser. Bower came into the market by eliminating this problem.  4. JSPM  JSPM is a manager for SystemJS universal module loader. It can load any module format directly from any registry such as NPM and GitHub with falt versioned dependency management. For the development purpose  it loads modules into separate files with E6 and plugins compiled in the browser. For production and development  it optimizes code into a bundle  layered bundle and self-executing bundle.  5. DUO JS  Duo is a next-generation package manager that blends best ideas from the component  Browserify and Go to make organizing and writing code for frontend painless. It has eliminated the requirement of package installation by introducing require() function. This load package just from the GitHub path. By this way  you don‚Äôt need to make any package.json file.,,CWL
sanunaithani2,https://github.com/sanunaithani2/Professional-Translation-Services,sanunaithani2/Professional-Translation-Services,Patent generally intends the exclusive right granted to an inventor to manufacture or sell an invention. Patent translation service is a very exclusive area of translation services. Translating the language of a patent requires specific technical knowledge and in many cases  knowledge of that particular terminology. There are now nearly two million patent applications filed throughout the world every year. The process of translating documents is evolving quickly to meet the increasing demands. A small mistake in patent translation can incur a loss of millions and even can contradict with the years of research  and this is an area where one cannot tolerate mistakes. Hence  it is very much necessary to get the translation done from the established service provider.  LCS¬Æ provides flawless  perfect and professionally prepared patent translation services. LCS¬Æ patent translation services can accurately translate patent applications. LCS¬Æ is very much aware of the technical challenges in doing the patent translation. All our translators have been in this translation field for many years. We specialize in offering patent translation services in various fields. Here  you will find in us the most trusted patent translation services. You can depend on us in dealing with different patent services. So  there is no doubt as far as the quality of our services is concerned.  Improve Accuracy:    A substantial amount of time is then spent researching appropriate terminology for the technical terms employed. Proper terminology management allows for the consistent use of correct terminology by all translators  enabling multiple people to work on a project and still maintain the same degree of accuracy. During translation  technology can pull terminology from predefined terminology lists and present these translated terms automatically to translators  thus reducing interruptions in the workflow and improving productivity. The automated use of those terminology lists greatly contributes to the linguistic quality of the project by helping translators to be more consistent not only within one project  but also from one project to another.  Additionally  translation memory technology can preserve formatting codes and layout information  reducing the time of the desktop publisher and ensuring the translated document to look as professional as the source document.  Quality Control:  Here  you will have a translator who is expert in the particular field and extremely knowledgeable regarding all the proper terminology. Our patent translators are chosen for their fluency  educational background  and expertise in the field related to the matter. All translations undergo a thorough quality check by our proofreaders to ensure accuracy and correctness.  At LCS¬Æ  we deliver the exact patent translation work need by the clients and so  we pay utmost attention to the end product delivery. Hence  we are very specific to the services that we provide.   Contact Us:- sanu Language Consultancy Services Pvt. Ltd. T6- Anupam Plaza  3rd Floor  Sri Aurobindo Marg   Kalu Sarai  Hauz Khas  New Delhi - 110 016 INDIA   Tel: +91 11 4604 0261 Fax: +91-11-4604 0262  Cell: +91 98104 41212  +91 98100 54060  Email: info@languageconsultancyservices.com Website: www.languageconsultancyservices.com,,CWL
gnanasekar6914,https://github.com/gnanasekar6914/Overview-of-JIRA-Benefits,gnanasekar6914/Overview-of-JIRA-Benefits,To be qualified as one of the most powerful project management and collaboration-equipped systems of today  <a href="https;//mindmajix.com/jira-training">JIRA</a> brings on the table a multitude of unique features and functionalities. The platform can simultaneously be used for both internal and external project management  agile tracking  and software development  and has served over 40 000 international businesses during its 15 years of market excellence.  But will JIRA also meet the needs of your company? Let‚Äôs check:  A number-one choice for configuration  JIRA was projected as an agile system  able to meet the needs of different niches and industries. Driven by such intent  it evolved over the years into a highly customizable and feature-rich solution that uses a hybrid Scrumban approach which combines Scrum and Kanban to adapt to every user scenario. With JIRA  all your workflows  states  fields  and issue types will get sensible defaults you can change upon need  or even create custom workflows and issue schemes in more specific cases. This will take much of your developers‚Äô burden off their shoulders  and empower your project management units to maximize the potential of their idea. If you‚Äôre using JIRA on demand  configuration will take even less time.  Genuinely flexible project management  It goes without saying that a system empowered for manipulation sets the grounds for proficient project management  but one still has to dig into details to understand everything JIRA can do. The system deals predominantly with agile project management  adopting both a Scrum and a Kanban approach (Scrumban)  and captures data and regulatory evidence at every stage of the process. A beneficial hint you will discover along the way is active engagement for your entire team  as JIRA gives everyone the whole picture of the processes they‚Äôre involved in  and lets no issue falls through the cracks. As a matter of fact  team members receive instant notifications on matters that are of interest to them  and are able to communicate  share ideas  and attach important documents.  A system you can learn from  JIRA collects and unites all historic data in a single  searchable hub  and provides access to it at any point of time. This way  team members will be able to perform all sorts of rend analysis and statistical investigations  and prepare constructive reports on their progress. A dozen of out-of-the-box templates will be displayed to get the job done with minimal interference  but the user won‚Äôt be obstructed from crafting his own custom summaries.  A rich toolkit for developers  While it is true that JIRA is mostly appreciated for issue and bug tracking  those are far from being the only features you should know about. This system will become your developers‚Äô favorite assets before you know it  as they will get a dedicated JIRA Query Language (JQL) to create all filters and manipulations in less than no time. For instance  JIRA can be connected to BitBucket and GitHub to provide backlog-to-deployment traceability  and new workflows can be created to synchronize the different practices users employ to build  test  and release their applications. The robust set of APIs will also come handy to connect JIRA to third-party software  and obtain the exact data migration patterns you‚Äôve envisioned.  Flexible deployment options  Depending on their current software infrastructure  Linux and Windows installers are offered for the OnPremise solution  but they can also opt for the hassle-free and minimum maintenance JIRA OnDemand. As your preferences change  you can easily switch between the OnPremise or OnDemand packages.  Unparalleled connectivity  Extending JIRA‚Äôs power and making it work in line with your business specifications will be more than easy  as developers provided you with flexible REST and Java APIs  as well as 800+ add-ons and plugins available in the Atlassian Marketplace. This makes JIRA perfectly capable of blending into your software environment  and ready to run as soon as you‚Äôve created your account.  Mobile apps  JIRA is ideal for large and remote teams working on a variety of locations  as it comes with native mobile apps that keep Android and iOS users connected. The apps are just as powerful as the desktop and on premise version of the system  which means you can use them to complete all tasks and operations  and access all data available in your database.,,CWL